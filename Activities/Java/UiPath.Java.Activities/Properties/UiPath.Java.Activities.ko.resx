<?xml version="1.0" encoding="UTF-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConstructorException" xml:space="preserve">
    <value>생성자를 호출할 수 없습니다.</value>
  </data>
  <data name="ConvertException" xml:space="preserve">
    <value>변환할 수 없음 </value>
  </data>
  <data name="ConvertJavaObjectDescription" xml:space="preserve">
    <value>java 객체를 지정된 .net 형식으로 변환하십시오. 그럴 수 없는 경우 예외가 throw됩니다.</value>
  </data>
  <data name="ConvertJavaObjectDisplayName" xml:space="preserve">
    <value>Convert Java Object</value>
    <comment>activity name</comment>
  </data>
  <data name="ConvertJavaObjectResultDescription" xml:space="preserve">
    <value>.net으로 변환된 java 객체입니다.</value>
  </data>
  <data name="CreateJavaObjectDescription" xml:space="preserve">
    <value>지정된 클래스에서 생성자를 호출하십시오.</value>
  </data>
  <data name="CreateJavaObjectDisplayName" xml:space="preserve">
    <value>Create Java Object</value>
    <comment>activity name</comment>
  </data>
  <data name="Do" xml:space="preserve">
    <value>실행</value>
  </data>
  <data name="FieldNameDisplayName" xml:space="preserve">
    <value>필드 이름</value>
    <comment>property name</comment>
  </data>
  <data name="FieldNameDescription" xml:space="preserve">
    <value>액티비티가 java 객체로 반환될 필드의 이름입니다.</value>
  </data>
  <data name="GetFieldDescritption" xml:space="preserve">
    <value>java 객체에서 공용 필드를 반환합니다.</value>
  </data>
  <data name="GetFieldDisplayName" xml:space="preserve">
    <value>Get Field</value>
    <comment>activity name</comment>
  </data>
  <data name="GetFieldException" xml:space="preserve">
    <value>필드를 찾을 수 없습니다.</value>
  </data>
  <data name="Input" xml:space="preserve">
    <value>입력</value>
  </data>
  <data name="Target" xml:space="preserve">
    <value>타겟</value>
  </data>
  <data name="InvokationObjectException" xml:space="preserve">
    <value>대상 객체와 대상 형식이 모두 비어 있습니다. 둘 중 하나 이상은 설정되어야 합니다.</value>
  </data>
  <data name="InvokeJavaMethodDescription" xml:space="preserve">
    <value>Java 메서드 호출</value>
  </data>
  <data name="InvokeJavaMethodDisplayName" xml:space="preserve">
    <value>Invoke Java Method</value>
    <comment>activity name</comment>
  </data>
  <data name="InvokeJavaResultDescription" xml:space="preserve">
    <value>Java에서 로드된 객체에 대한 참조입니다.</value>
  </data>
  <data name="InvokeMethodException" xml:space="preserve">
    <value>메서드를 호출하지 못했습니다.</value>
  </data>
  <data name="JarPathDescription" xml:space="preserve">
    <value>로드될 jar의 경로입니다.</value>
  </data>
  <data name="JarPathDisplayName" xml:space="preserve">
    <value>Jar 경로</value>
    <comment>property name</comment>
  </data>
  <data name="JavaInitiazeException" xml:space="preserve">
    <value>Java 초기화 중 오류: {0}</value>
  </data>
  <data name="JavaInvokerNotLoadedException" xml:space="preserve">
    <value>Java 호출자가 로드되지 않았습니다.</value>
  </data>
  <data name="JavaObjectDisplayName" xml:space="preserve">
    <value>Java 개체</value>
    <comment>property name</comment>
  </data>
  <data name="JavaObjectDescription" xml:space="preserve">
    <value>Java에서 로드된 객체에 대한 참조입니다.</value>
  </data>
  <data name="JavaPathDescription" xml:space="preserve">
    <value>java.exe의 경로</value>
  </data>
  <data name="JavaPathDisplayName" xml:space="preserve">
    <value>Java 라이브러리경로</value>
    <comment>property name</comment>
  </data>
  <data name="JavaScopeDescription" xml:space="preserve">
    <value>Java 액티비티 컨테이너</value>
  </data>
  <data name="JavaScopeNameDisplayName" xml:space="preserve">
    <value>Java Scope</value>
    <comment>activity name</comment>
  </data>
  <data name="LoadJarDescription" xml:space="preserve">
    <value>현재 java 범위에서 jar을 로드합니다.</value>
  </data>
  <data name="LoadJarDisplayName" xml:space="preserve">
    <value>Load Jar</value>
    <comment>activity name</comment>
  </data>
  <data name="LoadJarException" xml:space="preserve">
    <value>Jar을 로드하지 못했습니다.</value>
  </data>
  <data name="MethodNameDisplayName" xml:space="preserve">
    <value>메드 이름</value>
    <comment>property name</comment>
  </data>
  <data name="MethodNameDescription" xml:space="preserve">
    <value>Java에서 실행될 메서드의 이름입니다.</value>
  </data>
  <data name="OutputDisplayName" xml:space="preserve">
    <value>출력</value>
    <comment>property name</comment>
  </data>
  <data name="ParametersDescription" xml:space="preserve">
    <value>Java 메서드와 동일한 순서로 지정된 인수의 목록입니다. 인수는 Null이 아니어야 합니다.</value>
  </data>
  <data name="ParametersDisplayName" xml:space="preserve">
    <value>매개 변수</value>
    <comment>property name</comment>
  </data>
  <data name="ParametersListDisplayName" xml:space="preserve">
    <value>파라미터 목록</value>
    <comment>property name</comment>
  </data>
  <data name="ParametersSetException" xml:space="preserve">
    <value>{0} 및 {1} 모두를 설정할 수 없습니다.</value>
  </data>
  <data name="ResultDisplayName" xml:space="preserve">
    <value>결과</value>
    <comment>property name</comment>
  </data>
  <data name="TargetObjectDisplayName" xml:space="preserve">
    <value>대상 개체</value>
    <comment>property name</comment>
  </data>
  <data name="TargetObjectDescription" xml:space="preserve">
    <value>메서드가 호출될 java 객체 인스턴스입니다. TargetObject 및 TargetType을 동시에 설정할 수 없습니다.</value>
  </data>
  <data name="TargetTypeDisplayName" xml:space="preserve">
    <value>대상 유형</value>
    <comment>property name</comment>
  </data>
  <data name="TargetTypeDescription" xml:space="preserve">
    <value>java 클래스의 이름입니다.</value>
  </data>
  <data name="ValidateParentError" xml:space="preserve">
    <value>액티비티는 {0} 내에서만 유효합니다.</value>
  </data>
  <data name="FieldName" xml:space="preserve">
    <value>필드 이름</value>
  </data>
  <data name="JavaObject" xml:space="preserve">
    <value>JavaObject</value>
  </data>
  <data name="MethodName" xml:space="preserve">
    <value>메서드 이름</value>
  </data>
  <data name="Output" xml:space="preserve">
    <value>출력</value>
  </data>
  <data name="InvalidJavaPath" xml:space="preserve">
    <value>java 라이브러리의 경로가 잘못되었습니다.</value>
  </data>
  <data name="TimeoutMSDisplayName" xml:space="preserve">
    <value>시간 제한(밀리초)</value>
    <comment>property name</comment>
  </data>
  <data name="TimeoutMSException" xml:space="preserve">
    <value>TimeoutMS의 입력 값은 0 이상이어야 합니다.</value>
  </data>
  <data name="TimeoutMSDescription" xml:space="preserve">
    <value>Java 런타임 연결을 위해 기다리는 시간(밀리초)입니다(기본 값 15000ms).</value>
  </data>
</root>