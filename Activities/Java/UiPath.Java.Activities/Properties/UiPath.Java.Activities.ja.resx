<?xml version="1.0" encoding="UTF-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConstructorException" xml:space="preserve">
    <value>コンストラクターを呼び出せませんでした。</value>
  </data>
  <data name="ConvertException" xml:space="preserve">
    <value>変換できませんでした。 </value>
  </data>
  <data name="ConvertJavaObjectDescription" xml:space="preserve">
    <value>Java オブジェクトを、指定した .NET 型に変換します。キャストできない場合は例外がスローされます。(Convert Java Object)</value>
  </data>
  <data name="ConvertJavaObjectDisplayName" xml:space="preserve">
    <value>Java オブジェクトを変換</value>
    <comment>activity name</comment>
  </data>
  <data name="ConvertJavaObjectResultDescription" xml:space="preserve">
    <value>.NET に変換された Java オブジェクトです。</value>
  </data>
  <data name="CreateJavaObjectDescription" xml:space="preserve">
    <value>指定したクラスのコンストラクターを呼び出します。(Create Java Object)</value>
  </data>
  <data name="CreateJavaObjectDisplayName" xml:space="preserve">
    <value>Java オブジェクトを作成</value>
    <comment>activity name</comment>
  </data>
  <data name="Do" xml:space="preserve">
    <value>実行</value>
  </data>
  <data name="FieldNameDisplayName" xml:space="preserve">
    <value>フィールド名</value>
    <comment>property name</comment>
  </data>
  <data name="FieldNameDescription" xml:space="preserve">
    <value>アクティビティが Java オブジェクトとして返すフィールドの名前です。</value>
  </data>
  <data name="GetFieldDescritption" xml:space="preserve">
    <value>Java オブジェクトからパブリック フィールドを返します。</value>
  </data>
  <data name="GetFieldDisplayName" xml:space="preserve">
    <value>フィールドを取得</value>
    <comment>activity name</comment>
  </data>
  <data name="GetFieldException" xml:space="preserve">
    <value>フィールドが見つかりません。</value>
  </data>
  <data name="Input" xml:space="preserve">
    <value>入力</value>
  </data>
  <data name="Target" xml:space="preserve">
    <value>ターゲット</value>
  </data>
  <data name="InvokationObjectException" xml:space="preserve">
    <value>[ターゲット オブジェクト] と [ターゲット型] の両方が空です。少なくとも 1 つを設定する必要があります。</value>
  </data>
  <data name="InvokeJavaMethodDescription" xml:space="preserve">
    <value>Java メソッドを呼び出します。 (Invoke Java Method)</value>
  </data>
  <data name="InvokeJavaMethodDisplayName" xml:space="preserve">
    <value>Java メソッドを呼び出し</value>
    <comment>activity name</comment>
  </data>
  <data name="InvokeJavaResultDescription" xml:space="preserve">
    <value>Java に読み込まれたオブジェクトへの参照です。</value>
  </data>
  <data name="InvokeMethodException" xml:space="preserve">
    <value>メソッドを呼び出せませんでした。</value>
  </data>
  <data name="JarPathDescription" xml:space="preserve">
    <value>読み込まれる Jar ファイルのパスです。</value>
  </data>
  <data name="JarPathDisplayName" xml:space="preserve">
    <value>Jar パス</value>
    <comment>property name</comment>
  </data>
  <data name="JavaInitiazeException" xml:space="preserve">
    <value>次の Java の Jar ファイルの初期化中にエラーが発生しました: {0}</value>
  </data>
  <data name="JavaInvokerNotLoadedException" xml:space="preserve">
    <value>Java Invoker が読み込まれませんでした。</value>
  </data>
  <data name="JavaObjectDisplayName" xml:space="preserve">
    <value>Java オブジェクト</value>
    <comment>property name</comment>
  </data>
  <data name="JavaObjectDescription" xml:space="preserve">
    <value>Java に読み込まれたオブジェクトへの参照です。</value>
  </data>
  <data name="JavaPathDescription" xml:space="preserve">
    <value>java.exe のパスです。</value>
  </data>
  <data name="JavaPathDisplayName" xml:space="preserve">
    <value>Java ライブラリ パス</value>
    <comment>property name</comment>
  </data>
  <data name="JavaScopeDescription" xml:space="preserve">
    <value>Java 系アクティビティのコンテナーです。(Java Scope)</value>
  </data>
  <data name="JavaScopeNameDisplayName" xml:space="preserve">
    <value>Java スコープ</value>
    <comment>activity name</comment>
  </data>
  <data name="LoadJarDescription" xml:space="preserve">
    <value>Jar を現在の [Java スコープ] アクティビティに読み込みます。(Load Jar)</value>
  </data>
  <data name="LoadJarDisplayName" xml:space="preserve">
    <value>Jar を読み込み</value>
    <comment>activity name</comment>
  </data>
  <data name="LoadJarException" xml:space="preserve">
    <value>Jar ファイルを読み込めませんでした。</value>
  </data>
  <data name="MethodNameDisplayName" xml:space="preserve">
    <value>メソッド名</value>
    <comment>property name</comment>
  </data>
  <data name="MethodNameDescription" xml:space="preserve">
    <value>Java で実行するメソッドの名前です。</value>
  </data>
  <data name="OutputDisplayName" xml:space="preserve">
    <value>出力</value>
    <comment>property name</comment>
  </data>
  <data name="ParametersDescription" xml:space="preserve">
    <value>Java メソッドでの順序と同じ順序で指定する引数の一覧です。引数を null にすることはできません。</value>
  </data>
  <data name="ParametersDisplayName" xml:space="preserve">
    <value>パラメーター</value>
    <comment>property name</comment>
  </data>
  <data name="ParametersListDisplayName" xml:space="preserve">
    <value>パラメーター一覧</value>
    <comment>property name</comment>
  </data>
  <data name="ParametersSetException" xml:space="preserve">
    <value>{0} と {1} は同時に設定できません。</value>
  </data>
  <data name="ResultDisplayName" xml:space="preserve">
    <value>結果</value>
    <comment>property name</comment>
  </data>
  <data name="TargetObjectDisplayName" xml:space="preserve">
    <value>ターゲット オブジェクト</value>
    <comment>property name</comment>
  </data>
  <data name="TargetObjectDescription" xml:space="preserve">
    <value>メソッドを呼び出す Java オブジェクトのインスタンスです。[ターゲット オブジェクト] と [ターゲット型] は、同時に設定することはできません。</value>
  </data>
  <data name="TargetTypeDisplayName" xml:space="preserve">
    <value>ターゲット型</value>
    <comment>property name</comment>
  </data>
  <data name="TargetTypeDescription" xml:space="preserve">
    <value>Java クラスの名前です。</value>
  </data>
  <data name="ValidateParentError" xml:space="preserve">
    <value>アクティビティは {0} の内部でのみ有効です。</value>
  </data>
  <data name="FieldName" xml:space="preserve">
    <value>フィールド名</value>
  </data>
  <data name="JavaObject" xml:space="preserve">
    <value>Java オブジェクト</value>
  </data>
  <data name="MethodName" xml:space="preserve">
    <value>メソッド名</value>
  </data>
  <data name="Output" xml:space="preserve">
    <value>出力</value>
  </data>
  <data name="InvalidJavaPath" xml:space="preserve">
    <value>Java ライブラリのパスが無効です。</value>
  </data>
  <data name="TimeoutMSDisplayName" xml:space="preserve">
    <value>初期タイムアウト (ミリ秒)</value>
    <comment>property name</comment>
  </data>
  <data name="TimeoutMSException" xml:space="preserve">
    <value>[タイムアウト (ミリ秒)] に入力する値は 0 以上である必要があります。</value>
  </data>
  <data name="TimeoutMSDescription" xml:space="preserve">
    <value>Java ランタイムに接続するまでに待機する時間 (ミリ秒) です (既定では 15000 ミリ秒)。</value>
  </data>
</root>