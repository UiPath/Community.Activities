//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UiPath.Cryptography.Activities.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class UiPath_Cryptography_Activities {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal UiPath_Cryptography_Activities() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UiPath.Cryptography.Activities.Properties.UiPath.Cryptography.Activities", typeof(UiPath_Cryptography_Activities).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrypts a file based on a specified key encoding and algorithm..
        /// </summary>
        public static string Activity_DecryptFile_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrypt File.
        /// </summary>
        public static string Activity_DecryptFile_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A drop-down which enables you to select the decryption algorithm you want to use..
        /// </summary>
        public static string Activity_DecryptFile_Property_Algorithm_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_Algorithm_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Algorithm.
        /// </summary>
        public static string Activity_DecryptFile_Property_Algorithm_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_Algorithm_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies if the automation should continue even when the activity throws an error..
        /// </summary>
        public static string Activity_DecryptFile_Property_ContinueOnError_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_ContinueOnError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue On Error.
        /// </summary>
        public static string Activity_DecryptFile_Property_ContinueOnError_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_ContinueOnError_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The decrypted file.
        /// </summary>
        public static string Activity_DecryptFile_Property_DecryptedFile_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_DecryptedFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrypted File.
        /// </summary>
        public static string Activity_DecryptFile_Property_DecryptedFile_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_DecryptedFile_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The switch between File Path and Resource.
        /// </summary>
        public static string Activity_DecryptFile_Property_FileInputModeSwitch_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_FileInputModeSwitch_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FileInputModeSwitch.
        /// </summary>
        public static string Activity_DecryptFile_Property_FileInputModeSwitch_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_FileInputModeSwitch_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file to be decrypted.
        /// </summary>
        public static string Activity_DecryptFile_Property_InputFile_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_InputFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        public static string Activity_DecryptFile_Property_InputFile_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_InputFile_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to the file that you want to decrypt..
        /// </summary>
        public static string Activity_DecryptFile_Property_InputFilePath_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_InputFilePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input Path.
        /// </summary>
        public static string Activity_DecryptFile_Property_InputFilePath_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_InputFilePath_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key that you want to use to decrypt the specified file..
        /// </summary>
        public static string Activity_DecryptFile_Property_Key_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_Key_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        public static string Activity_DecryptFile_Property_Key_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_Key_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding used to interpret the key specified in the Key property..
        /// </summary>
        public static string Activity_DecryptFile_Property_KeyEncoding_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_KeyEncoding_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Encoding.
        /// </summary>
        public static string Activity_DecryptFile_Property_KeyEncoding_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_KeyEncoding_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding used to interpret the key specified in the Key property..
        /// </summary>
        public static string Activity_DecryptFile_Property_KeyEncodingString_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_KeyEncodingString_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Encoding.
        /// </summary>
        public static string Activity_DecryptFile_Property_KeyEncodingString_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_KeyEncodingString_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The switch between Key and Secure String Key.
        /// </summary>
        public static string Activity_DecryptFile_Property_KeyInputModeSwitch_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_KeyInputModeSwitch_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KeyInputModeSwitch.
        /// </summary>
        public static string Activity_DecryptFile_Property_KeyInputModeSwitch_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_KeyInputModeSwitch_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The secure string used to decrypt the input file..
        /// </summary>
        public static string Activity_DecryptFile_Property_KeySecureString_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_KeySecureString_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Secure String.
        /// </summary>
        public static string Activity_DecryptFile_Property_KeySecureString_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_KeySecureString_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file name you want to use to save the decrypted file..
        /// </summary>
        public static string Activity_DecryptFile_Property_OutputFileName_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_OutputFileName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrypted Filename.
        /// </summary>
        public static string Activity_DecryptFile_Property_OutputFileName_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_OutputFileName_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path where you want to save the decrypted file..
        /// </summary>
        public static string Activity_DecryptFile_Property_OutputFilePath_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_OutputFilePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output file name and location.
        /// </summary>
        public static string Activity_DecryptFile_Property_OutputFilePath_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_OutputFilePath_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a file already exists at the path specified in the Output path field, selecting this check box overwrites it. If unchecked, a new file is created..
        /// </summary>
        public static string Activity_DecryptFile_Property_Overwrite_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_Overwrite_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwrite.
        /// </summary>
        public static string Activity_DecryptFile_Property_Overwrite_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptFile_Property_Overwrite_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrypts text based on a specified key encoding and algorithm..
        /// </summary>
        public static string Activity_DecryptText_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrypt Text.
        /// </summary>
        public static string Activity_DecryptText_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A drop-down which enables you to select the decryption algorithm you want to use..
        /// </summary>
        public static string Activity_DecryptText_Property_Algorithm_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_Algorithm_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Algorithm.
        /// </summary>
        public static string Activity_DecryptText_Property_Algorithm_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_Algorithm_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies if the automation should continue even if the activity throws an error..
        /// </summary>
        public static string Activity_DecryptText_Property_ContinueOnError_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_ContinueOnError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue On Error.
        /// </summary>
        public static string Activity_DecryptText_Property_ContinueOnError_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_ContinueOnError_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding used to interpret the input text and the key specified in the Key property..
        /// </summary>
        public static string Activity_DecryptText_Property_Encoding_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_Encoding_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encoding.
        /// </summary>
        public static string Activity_DecryptText_Property_Encoding_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_Encoding_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text that you want to decrypt..
        /// </summary>
        public static string Activity_DecryptText_Property_Input_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_Input_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text.
        /// </summary>
        public static string Activity_DecryptText_Property_Input_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_Input_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key that you want to use to decrypt the specified file..
        /// </summary>
        public static string Activity_DecryptText_Property_Key_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_Key_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        public static string Activity_DecryptText_Property_Key_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_Key_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding used to interpret the key specified in the Key property..
        /// </summary>
        public static string Activity_DecryptText_Property_KeyEncodingString_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_KeyEncodingString_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Encoding.
        /// </summary>
        public static string Activity_DecryptText_Property_KeyEncodingString_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_KeyEncodingString_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The switch between Key and Secure String Key.
        /// </summary>
        public static string Activity_DecryptText_Property_KeyInputModeSwitch_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_KeyInputModeSwitch_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KeyInputModeSwitch.
        /// </summary>
        public static string Activity_DecryptText_Property_KeyInputModeSwitch_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_KeyInputModeSwitch_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The secure string used to decrypt the input string..
        /// </summary>
        public static string Activity_DecryptText_Property_KeySecureString_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_KeySecureString_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Secure String.
        /// </summary>
        public static string Activity_DecryptText_Property_KeySecureString_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_KeySecureString_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The decrypted text, stored in a String variable..
        /// </summary>
        public static string Activity_DecryptText_Property_Result_Description {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrypted Text.
        /// </summary>
        public static string Activity_DecryptText_Property_Result_Name {
            get {
                return ResourceManager.GetString("Activity_DecryptText_Property_Result_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected encryption algorithm is deprecated and it will no longer be supported in future versions..
        /// </summary>
        public static string Activity_Encrypt_Algorithm_Deprecated_Warning {
            get {
                return ResourceManager.GetString("Activity_Encrypt_Algorithm_Deprecated_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypts a file with a key based on a specified key encoding and algorithm..
        /// </summary>
        public static string Activity_EncryptFile_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypt File.
        /// </summary>
        public static string Activity_EncryptFile_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A drop-down which enables you to select the encryption algorithm you want to use..
        /// </summary>
        public static string Activity_EncryptFile_Property_Algorithm_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_Algorithm_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Algorithm.
        /// </summary>
        public static string Activity_EncryptFile_Property_Algorithm_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_Algorithm_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies if the automation should continue even when the activity throws an error..
        /// </summary>
        public static string Activity_EncryptFile_Property_ContinueOnError_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_ContinueOnError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue On Error.
        /// </summary>
        public static string Activity_EncryptFile_Property_ContinueOnError_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_ContinueOnError_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encrypted file.
        /// </summary>
        public static string Activity_EncryptFile_Property_EncryptedFile_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_EncryptedFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypted File.
        /// </summary>
        public static string Activity_EncryptFile_Property_EncryptedFile_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_EncryptedFile_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The switch between File Path and Resource.
        /// </summary>
        public static string Activity_EncryptFile_Property_FileInputModeSwitch_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_FileInputModeSwitch_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FileInputModeSwitch.
        /// </summary>
        public static string Activity_EncryptFile_Property_FileInputModeSwitch_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_FileInputModeSwitch_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file to be encrypted.
        /// </summary>
        public static string Activity_EncryptFile_Property_InputFile_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_InputFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        public static string Activity_EncryptFile_Property_InputFile_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_InputFile_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to the file that you want to encrypt..
        /// </summary>
        public static string Activity_EncryptFile_Property_InputFilePath_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_InputFilePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input Path.
        /// </summary>
        public static string Activity_EncryptFile_Property_InputFilePath_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_InputFilePath_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key that you want to use to encrypt the specified file..
        /// </summary>
        public static string Activity_EncryptFile_Property_Key_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_Key_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        public static string Activity_EncryptFile_Property_Key_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_Key_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding used to interpret the key specified in the Key property..
        /// </summary>
        public static string Activity_EncryptFile_Property_KeyEncoding_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_KeyEncoding_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Encoding.
        /// </summary>
        public static string Activity_EncryptFile_Property_KeyEncoding_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_KeyEncoding_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding used to interpret the key specified in the Key property..
        /// </summary>
        public static string Activity_EncryptFile_Property_KeyEncodingString_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_KeyEncodingString_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Encoding.
        /// </summary>
        public static string Activity_EncryptFile_Property_KeyEncodingString_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_KeyEncodingString_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The switch between Key and Secure String Key.
        /// </summary>
        public static string Activity_EncryptFile_Property_KeyInputModeSwitch_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_KeyInputModeSwitch_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KeyInputModeSwitch.
        /// </summary>
        public static string Activity_EncryptFile_Property_KeyInputModeSwitch_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_KeyInputModeSwitch_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The secure string used to encrypt the input file..
        /// </summary>
        public static string Activity_EncryptFile_Property_KeySecureString_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_KeySecureString_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Secure String.
        /// </summary>
        public static string Activity_EncryptFile_Property_KeySecureString_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_KeySecureString_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file name you want to use to save the encrypted file..
        /// </summary>
        public static string Activity_EncryptFile_Property_OutputFileName_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_OutputFileName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypted Filename.
        /// </summary>
        public static string Activity_EncryptFile_Property_OutputFileName_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_OutputFileName_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path where you want to save the encrypted file..
        /// </summary>
        public static string Activity_EncryptFile_Property_OutputFilePath_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_OutputFilePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output file name and location.
        /// </summary>
        public static string Activity_EncryptFile_Property_OutputFilePath_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_OutputFilePath_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a file already exists at the path specified in the Output path field, selecting this check box overwrites it. If unchecked, a new file is created..
        /// </summary>
        public static string Activity_EncryptFile_Property_Overwrite_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_Overwrite_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwrite.
        /// </summary>
        public static string Activity_EncryptFile_Property_Overwrite_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptFile_Property_Overwrite_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypts a string with a key based on a specified key encoding and algorithm..
        /// </summary>
        public static string Activity_EncryptText_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypt Text.
        /// </summary>
        public static string Activity_EncryptText_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A drop-down which enables you to select the encryption algorithm you want to use..
        /// </summary>
        public static string Activity_EncryptText_Property_Algorithm_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_Algorithm_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Algorithm.
        /// </summary>
        public static string Activity_EncryptText_Property_Algorithm_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_Algorithm_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies if the automation should continue even when the activity throws an error..
        /// </summary>
        public static string Activity_EncryptText_Property_ContinueOnError_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_ContinueOnError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue On Error.
        /// </summary>
        public static string Activity_EncryptText_Property_ContinueOnError_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_ContinueOnError_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding used to interpret the input text and the key specified in the Key property..
        /// </summary>
        public static string Activity_EncryptText_Property_Encoding_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_Encoding_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encoding.
        /// </summary>
        public static string Activity_EncryptText_Property_Encoding_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_Encoding_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text that you want to encrypt..
        /// </summary>
        public static string Activity_EncryptText_Property_Input_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_Input_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text.
        /// </summary>
        public static string Activity_EncryptText_Property_Input_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_Input_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key that you want to use to encrypt the specified file..
        /// </summary>
        public static string Activity_EncryptText_Property_Key_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_Key_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        public static string Activity_EncryptText_Property_Key_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_Key_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding used to interpret the key specified in the Key property..
        /// </summary>
        public static string Activity_EncryptText_Property_KeyEncodingString_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_KeyEncodingString_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Encoding.
        /// </summary>
        public static string Activity_EncryptText_Property_KeyEncodingString_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_KeyEncodingString_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The switch between Key and Secure String Key.
        /// </summary>
        public static string Activity_EncryptText_Property_KeyInputModeSwitch_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_KeyInputModeSwitch_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KeyInputModeSwitch.
        /// </summary>
        public static string Activity_EncryptText_Property_KeyInputModeSwitch_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_KeyInputModeSwitch_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The secure string used to encrypt the input string..
        /// </summary>
        public static string Activity_EncryptText_Property_KeySecureString_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_KeySecureString_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Secure String.
        /// </summary>
        public static string Activity_EncryptText_Property_KeySecureString_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_KeySecureString_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encrypted text, stored in a String variable..
        /// </summary>
        public static string Activity_EncryptText_Property_Result_Description {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypted Text.
        /// </summary>
        public static string Activity_EncryptText_Property_Result_Name {
            get {
                return ResourceManager.GetString("Activity_EncryptText_Property_Result_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This activity is now deprecated. SHA1, SHA256, SHA384, and SHA512 were moved to a single activity Hash File..
        /// </summary>
        public static string Activity_HashFile_Description {
            get {
                return ResourceManager.GetString("Activity_HashFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash File (deprecated).
        /// </summary>
        public static string Activity_HashFile_Name {
            get {
                return ResourceManager.GetString("Activity_HashFile_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A drop-down which enables you to select the hashing algorithm you want to use..
        /// </summary>
        public static string Activity_HashFile_Property_Algorithm_Description {
            get {
                return ResourceManager.GetString("Activity_HashFile_Property_Algorithm_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Algortithm.
        /// </summary>
        public static string Activity_HashFile_Property_Algorithm_Name {
            get {
                return ResourceManager.GetString("Activity_HashFile_Property_Algorithm_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies if the automation should continue even when the activity throws an error..
        /// </summary>
        public static string Activity_HashFile_Property_ContinueOnError_Description {
            get {
                return ResourceManager.GetString("Activity_HashFile_Property_ContinueOnError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue On Error.
        /// </summary>
        public static string Activity_HashFile_Property_ContinueOnError_Name {
            get {
                return ResourceManager.GetString("Activity_HashFile_Property_ContinueOnError_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The switch between File Path and Resource.
        /// </summary>
        public static string Activity_HashFile_Property_FileInputModeSwitch_Description {
            get {
                return ResourceManager.GetString("Activity_HashFile_Property_FileInputModeSwitch_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FileInputModeSwitch.
        /// </summary>
        public static string Activity_HashFile_Property_FileInputModeSwitch_Name {
            get {
                return ResourceManager.GetString("Activity_HashFile_Property_FileInputModeSwitch_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to he path to the file you want to hash..
        /// </summary>
        public static string Activity_HashFile_Property_FilePath_Description {
            get {
                return ResourceManager.GetString("Activity_HashFile_Property_FilePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Path.
        /// </summary>
        public static string Activity_HashFile_Property_FilePath_Name {
            get {
                return ResourceManager.GetString("Activity_HashFile_Property_FilePath_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hashed file, stored in a String variable..
        /// </summary>
        public static string Activity_HashFile_Property_Result_Description {
            get {
                return ResourceManager.GetString("Activity_HashFile_Property_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash.
        /// </summary>
        public static string Activity_HashFile_Property_Result_Name {
            get {
                return ResourceManager.GetString("Activity_HashFile_Property_Result_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This activity is now deprecated. SHA1, SHA256, SHA384, and SHA512 were moved to a single activity Hash Text..
        /// </summary>
        public static string Activity_HashText_Description {
            get {
                return ResourceManager.GetString("Activity_HashText_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash Text (deprecated).
        /// </summary>
        public static string Activity_HashText_Name {
            get {
                return ResourceManager.GetString("Activity_HashText_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A drop-down which enables you to select the hashing algorithm you want to use..
        /// </summary>
        public static string Activity_HashText_Property_Algorithm_Description {
            get {
                return ResourceManager.GetString("Activity_HashText_Property_Algorithm_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Algorithm.
        /// </summary>
        public static string Activity_HashText_Property_Algorithm_Name {
            get {
                return ResourceManager.GetString("Activity_HashText_Property_Algorithm_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies if the automation should continue even when the activity throws an error..
        /// </summary>
        public static string Activity_HashText_Property_ContinueOnError_Description {
            get {
                return ResourceManager.GetString("Activity_HashText_Property_ContinueOnError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue On Error.
        /// </summary>
        public static string Activity_HashText_Property_ContinueOnError_Name {
            get {
                return ResourceManager.GetString("Activity_HashText_Property_ContinueOnError_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding used to interpret the key specified in the Key property..
        /// </summary>
        public static string Activity_HashText_Property_Encoding_Description {
            get {
                return ResourceManager.GetString("Activity_HashText_Property_Encoding_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encoding.
        /// </summary>
        public static string Activity_HashText_Property_Encoding_Name {
            get {
                return ResourceManager.GetString("Activity_HashText_Property_Encoding_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text that you want to hash..
        /// </summary>
        public static string Activity_HashText_Property_Input_Description {
            get {
                return ResourceManager.GetString("Activity_HashText_Property_Input_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text.
        /// </summary>
        public static string Activity_HashText_Property_Input_Name {
            get {
                return ResourceManager.GetString("Activity_HashText_Property_Input_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hashed text, stored in a String variable..
        /// </summary>
        public static string Activity_HashText_Property_Result_Description {
            get {
                return ResourceManager.GetString("Activity_HashText_Property_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash.
        /// </summary>
        public static string Activity_HashText_Property_Result_Name {
            get {
                return ResourceManager.GetString("Activity_HashText_Property_Result_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hashes a file with a key using a specified algorithm and returns the hexadecimal string representation of the resulting hash. It supports hashing algorithms with a key and without a key..
        /// </summary>
        public static string Activity_KeyedHashFile_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash File.
        /// </summary>
        public static string Activity_KeyedHashFile_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A drop-down which enables you to select the keyed hashing algorithm you want to use..
        /// </summary>
        public static string Activity_KeyedHashFile_Property_Algorithm_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_Algorithm_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Algorithm.
        /// </summary>
        public static string Activity_KeyedHashFile_Property_Algorithm_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_Algorithm_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies if the automation should continue even when the activity throws an error..
        /// </summary>
        public static string Activity_KeyedHashFile_Property_ContinueOnError_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_ContinueOnError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue On Error.
        /// </summary>
        public static string Activity_KeyedHashFile_Property_ContinueOnError_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_ContinueOnError_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding used to interpret the key specified in the Key property..
        /// </summary>
        public static string Activity_KeyedHashFile_Property_Encoding_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_Encoding_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encoding.
        /// </summary>
        public static string Activity_KeyedHashFile_Property_Encoding_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_Encoding_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The switch between File Path and Resource.
        /// </summary>
        public static string Activity_KeyedHashFile_Property_FileInputModeSwitch_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_FileInputModeSwitch_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FileInputModeSwitch.
        /// </summary>
        public static string Activity_KeyedHashFile_Property_FileInputModeSwitch_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_FileInputModeSwitch_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to the file you want to hash..
        /// </summary>
        public static string Activity_KeyedHashFile_Property_FilePath_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_FilePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File path.
        /// </summary>
        public static string Activity_KeyedHashFile_Property_FilePath_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_FilePath_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file to be hashed.
        /// </summary>
        public static string Activity_KeyedHashFile_Property_InputFile_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_InputFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        public static string Activity_KeyedHashFile_Property_InputFile_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_InputFile_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key that you want to use to hash the specified file..
        /// </summary>
        public static string Activity_KeyedHashFile_Property_Key_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_Key_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        public static string Activity_KeyedHashFile_Property_Key_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_Key_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Key.
        /// </summary>
        public static string Activity_KeyedHashFile_Property_Key_SwitchName {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_Key_SwitchName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding used to interpret the key specified in the Key property..
        /// </summary>
        public static string Activity_KeyedHashFile_Property_KeyEncodingString_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_KeyEncodingString_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Encoding.
        /// </summary>
        public static string Activity_KeyedHashFile_Property_KeyEncodingString_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_KeyEncodingString_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The switch between Key and Secure String Key.
        /// </summary>
        public static string Activity_KeyedHashFile_Property_KeyInputModeSwitch_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_KeyInputModeSwitch_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KeyInputModeSwitch.
        /// </summary>
        public static string Activity_KeyedHashFile_Property_KeyInputModeSwitch_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_KeyInputModeSwitch_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The secure string used to hash the provided file..
        /// </summary>
        public static string Activity_KeyedHashFile_Property_KeySecureString_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_KeySecureString_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Secure String.
        /// </summary>
        public static string Activity_KeyedHashFile_Property_KeySecureString_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_KeySecureString_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Key Secure String.
        /// </summary>
        public static string Activity_KeyedHashFile_Property_KeySecureString_SwitchName {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_KeySecureString_SwitchName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hashed file, stored in a String variable..
        /// </summary>
        public static string Activity_KeyedHashFile_Property_Result_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash.
        /// </summary>
        public static string Activity_KeyedHashFile_Property_Result_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashFile_Property_Result_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hashes a string with a key using a specified algorithm and returns the hexadecimal string representation of the resulting hash. It supports hashing algorithms with a key and without a key..
        /// </summary>
        public static string Activity_KeyedHashText_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash Text.
        /// </summary>
        public static string Activity_KeyedHashText_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A drop-down which enables you to select the keyed hashing algorithm you want to use..
        /// </summary>
        public static string Activity_KeyedHashText_Property_Algorithm_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_Algorithm_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Algorithm.
        /// </summary>
        public static string Activity_KeyedHashText_Property_Algorithm_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_Algorithm_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies if the automation should continue even when the activity throws an error..
        /// </summary>
        public static string Activity_KeyedHashText_Property_ContinueOnError_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_ContinueOnError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue On Error.
        /// </summary>
        public static string Activity_KeyedHashText_Property_ContinueOnError_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_ContinueOnError_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding used to interpret the key specified in the Key property..
        /// </summary>
        public static string Activity_KeyedHashText_Property_Encoding_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_Encoding_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encoding.
        /// </summary>
        public static string Activity_KeyedHashText_Property_Encoding_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_Encoding_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text that you want to hash..
        /// </summary>
        public static string Activity_KeyedHashText_Property_Input_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_Input_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text.
        /// </summary>
        public static string Activity_KeyedHashText_Property_Input_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_Input_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key that you want to use to hash the specified text..
        /// </summary>
        public static string Activity_KeyedHashText_Property_Key_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_Key_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        public static string Activity_KeyedHashText_Property_Key_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_Key_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Key.
        /// </summary>
        public static string Activity_KeyedHashText_Property_Key_SwitchName {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_Key_SwitchName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding used to interpret the key specified in the Key property..
        /// </summary>
        public static string Activity_KeyedHashText_Property_KeyEncodingString_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_KeyEncodingString_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Encoding.
        /// </summary>
        public static string Activity_KeyedHashText_Property_KeyEncodingString_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_KeyEncodingString_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The switch between Key and Secure String Key.
        /// </summary>
        public static string Activity_KeyedHashText_Property_KeyInputModeSwitch_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_KeyInputModeSwitch_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KeyInputModeSwitch.
        /// </summary>
        public static string Activity_KeyedHashText_Property_KeyInputModeSwitch_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_KeyInputModeSwitch_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The secure string used to hash the input string..
        /// </summary>
        public static string Activity_KeyedHashText_Property_KeySecureString_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_KeySecureString_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Secure String.
        /// </summary>
        public static string Activity_KeyedHashText_Property_KeySecureString_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_KeySecureString_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Key Secure String.
        /// </summary>
        public static string Activity_KeyedHashText_Property_KeySecureString_SwitchName {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_KeySecureString_SwitchName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hashed text, stored in a String variable..
        /// </summary>
        public static string Activity_KeyedHashText_Property_Result_Description {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash.
        /// </summary>
        public static string Activity_KeyedHashText_Property_Result_Name {
            get {
                return ResourceManager.GetString("Activity_KeyedHashText_Property_Result_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options.
        /// </summary>
        public static string Category_Options_Name {
            get {
                return ResourceManager.GetString("Category_Options_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Others.
        /// </summary>
        public static string Category_Others_Name {
            get {
                return ResourceManager.GetString("Category_Others_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Principal.
        /// </summary>
        public static string Category_Principal_Name {
            get {
                return ResourceManager.GetString("Category_Principal_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Common.
        /// </summary>
        public static string Common {
            get {
                return ResourceManager.GetString("Common", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ContinueOnError.
        /// </summary>
        public static string ContinueOnErrorDisplayName {
            get {
                return ResourceManager.GetString("ContinueOnErrorDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encoding.
        /// </summary>
        public static string Encoding {
            get {
                return ResourceManager.GetString("Encoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one of {0] and {1} should have it&apos;s arguments configured..
        /// </summary>
        public static string Exception_UseOnlyFilePathOrInputResource {
            get {
                return ResourceManager.GetString("Exception_UseOnlyFilePathOrInputResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The activity only supports files, not folders..
        /// </summary>
        public static string Exception_UseOnlyFilesNotFolders {
            get {
                return ResourceManager.GetString("Exception_UseOnlyFilesNotFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file already exists..
        /// </summary>
        public static string FileAlreadyExistsException {
            get {
                return ResourceManager.GetString("FileAlreadyExistsException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file does not exist..
        /// </summary>
        public static string FileDoesNotExistsException {
            get {
                return ResourceManager.GetString("FileDoesNotExistsException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FilePath.
        /// </summary>
        public static string FilePathDisplayName {
            get {
                return ResourceManager.GetString("FilePathDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected algorithm does not have a FIPS compliant implementation. This might not work on some machines..
        /// </summary>
        public static string FipsComplianceWarning {
            get {
                return ResourceManager.GetString("FipsComplianceWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cryptographic operation has failed. Please make sure you use the same algorithm and key for both encryption and decryption operations..
        /// </summary>
        public static string GenericCryptographicException {
            get {
                return ResourceManager.GetString("GenericCryptographicException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input.
        /// </summary>
        public static string Input {
            get {
                return ResourceManager.GetString("Input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputPath.
        /// </summary>
        public static string InputFilePathDisplayName {
            get {
                return ResourceManager.GetString("InputFilePathDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text.
        /// </summary>
        public static string InputStringDisplayName {
            get {
                return ResourceManager.GetString("InputStringDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        public static string Key {
            get {
                return ResourceManager.GetString("Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key and the secure string must not be both not null..
        /// </summary>
        public static string KeyAndSecureStringNotNull {
            get {
                return ResourceManager.GetString("KeyAndSecureStringNotNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key and the secure string must not be both null..
        /// </summary>
        public static string KeyAndSecureStringNull {
            get {
                return ResourceManager.GetString("KeyAndSecureStringNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Key must not be null.
        /// </summary>
        public static string KeyNullError {
            get {
                return ResourceManager.GetString("KeyNullError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KeySecureString.
        /// </summary>
        public static string KeySecureString {
            get {
                return ResourceManager.GetString("KeySecureString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Secure String.
        /// </summary>
        public static string KeySecureStringDisplayName {
            get {
                return ResourceManager.GetString("KeySecureStringDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Key Secure String must not be null.
        /// </summary>
        public static string KeySecureStringNullError {
            get {
                return ResourceManager.GetString("KeySecureStringNullError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MACTripleDES uses a key that is 16 or 24 bytes long. The length of your key depends on the Encoding..
        /// </summary>
        public static string MacTripleDesKeySizeWarning {
            get {
                return ResourceManager.GetString("MacTripleDesKeySizeWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output.
        /// </summary>
        public static string Output {
            get {
                return ResourceManager.GetString("Output", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OutputPath.
        /// </summary>
        public static string OutputFilePathDisplayName {
            get {
                return ResourceManager.GetString("OutputFilePathDisplayName", resourceCulture);
            }
        }
    }
}
