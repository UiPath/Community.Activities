<?xml version="1.0" encoding="UTF-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlgorithmDisplayName" xml:space="preserve">
    <value>Algorithm</value>
    <comment>property name</comment>
  </data>
  <data name="EncodingDisplayName" xml:space="preserve">
    <value>Encoding</value>
    <comment>property name</comment>
  </data>
  <data name="EncodingDescription" xml:space="preserve">
    <value>A codificação usada para interpretar a string de entrada.</value>
  </data>
  <data name="EncryptAlgorithmDescription" xml:space="preserve">
    <value>The encryption algorithm that will be used by this activity. Usage of deprecated algorithms is not recommended.</value>
  </data>
  <data name="EncryptTextEncodingDescription" xml:space="preserve">
    <value>A codificação usada para interpretar a string e a chave de entrada.</value>
  </data>
  <data name="EncryptTextDisplayName" xml:space="preserve">
    <value>Encrypt Text</value>
    <comment>activity name</comment>
  </data>
  <data name="EncryptTextDescription" xml:space="preserve">
    <value>Criptografa a string de entrada usando o algoritmo selecionado e a chave fornecida, e retorna a representação da string base64 do resultado criptografado.</value>
  </data>
  <data name="EncryptTextInputDescription" xml:space="preserve">
    <value>A string que será criptografada por esta atividade.</value>
  </data>
  <data name="EncryptTextKeyDescription" xml:space="preserve">
    <value>A chave usada para criptografar a string de entrada.</value>
  </data>
  <data name="EncryptTextResultDescription" xml:space="preserve">
    <value>A representação da string base64 da string de entrada criptografada.</value>
  </data>
  <data name="FipsComplianceWarning" xml:space="preserve">
    <value>O algoritmo selecionado não possui uma implementação compatível com FIPS. Isso pode não funcionar em algumas máquinas.</value>
  </data>
  <data name="HashAlgorithmDescription" xml:space="preserve">
    <value>O algoritmo de hash que será usado por esta atividade.</value>
  </data>
  <data name="HashTextDisplayName" xml:space="preserve">
    <value>Hash Text</value>
    <comment>activity name</comment>
  </data>
  <data name="HashTextDescription" xml:space="preserve">
    <value>Aplica o algoritmo de hash selecionado na string de entrada e retorna a representação de string hexadecimal do hash resultante.</value>
  </data>
  <data name="HashTextInputDescription" xml:space="preserve">
    <value>A string cujo hash será feito por esta atividade.</value>
  </data>
  <data name="HashTextResultDescription" xml:space="preserve">
    <value>A representação de string hexadecimal da string de entrada com hash.</value>
  </data>
  <data name="Input" xml:space="preserve">
    <value>Entrada</value>
  </data>
  <data name="InputStringDisplayName" xml:space="preserve">
    <value>Text</value>
    <comment>property name</comment>
  </data>
  <data name="KeyDisplayName" xml:space="preserve">
    <value>Key</value>
    <comment>property name</comment>
  </data>
  <data name="KeyedHashAlgorithmDescription" xml:space="preserve">
    <value>O algoritmo de hash com chave que será usado por esta atividade.</value>
  </data>
  <data name="KeyedHashEncodingDescription" xml:space="preserve">
    <value>A codificação usada para interpretar a string e a chave de entrada.</value>
  </data>
  <data name="KeyedHashTextKeyDescription" xml:space="preserve">
    <value>A chave usada para fazer o hash da string de entrada.</value>
  </data>
  <data name="KeyedHashTextDisplayName" xml:space="preserve">
    <value>Hash Text With Key</value>
    <comment>activity name</comment>
  </data>
  <data name="KeyedHashTextDescription" xml:space="preserve">
    <value>Aplica o algoritmo de hash selecionado na string de entrada usando a chave fornecida para hash e retorna a representação de string hexadecimal do hash resultante.</value>
  </data>
  <data name="OutputDisplayName" xml:space="preserve">
    <value>Output</value>
    <comment>property name</comment>
  </data>
  <data name="ResultDisplayName" xml:space="preserve">
    <value>Result</value>
    <comment>property name</comment>
  </data>
  <data name="DecryptAlgorithmDescription" xml:space="preserve">
    <value>The decryption algorithm that will be used by this activity. Usage of deprecated algorithms is not recommended.</value>
  </data>
  <data name="DecryptTextDisplayName" xml:space="preserve">
    <value>Decrypt Text</value>
    <comment>activity name</comment>
  </data>
  <data name="DecryptTextDescription" xml:space="preserve">
    <value>Descriptografa a string de entrada usando o algoritmo selecionado e a chave fornecida, e retorna a string original, não criptografada.</value>
  </data>
  <data name="DecryptTextEncodingDescription" xml:space="preserve">
    <value>A codificação usada para interpretar a string e a chave de entrada.</value>
  </data>
  <data name="DecryptTextInputDescription" xml:space="preserve">
    <value>A string que será descriptografada por esta atividade.</value>
  </data>
  <data name="DecryptTextKeyDescription" xml:space="preserve">
    <value>A chave usada para descriptografar a string de entrada.</value>
  </data>
  <data name="DecryptTextResultDescription" xml:space="preserve">
    <value>A string descriptografada.</value>
  </data>
  <data name="FileDoesNotExistsException" xml:space="preserve">
    <value>O arquivo não existe.</value>
  </data>
  <data name="FilePathDisplayName" xml:space="preserve">
    <value>FilePath</value>
    <comment>property name</comment>
  </data>
  <data name="HashFileDisplayName" xml:space="preserve">
    <value>Hash File</value>
    <comment>activity name</comment>
  </data>
  <data name="HashFileDescription" xml:space="preserve">
    <value>Aplica o algoritmo de hash selecionado no conteúdo do arquivo fornecido e retorna a representação de string hexadecimal do hash resultante.</value>
  </data>
  <data name="HashFilePathDescription" xml:space="preserve">
    <value>Caminho para o arquivo cujo hash será feito por esta atividade.</value>
  </data>
  <data name="HashFileResultDescription" xml:space="preserve">
    <value>A representação de string hexadecimal do arquivo com hash.</value>
  </data>
  <data name="KeyedHashFileDisplayName" xml:space="preserve">
    <value>Hash File With Key</value>
    <comment>activity name</comment>
  </data>
  <data name="KeyedHashFileDescription" xml:space="preserve">
    <value>Aplica o algoritmo de hash selecionado no arquivo de entrada usando a chave fornecida para hash e retorna a representação de string hexadecimal do hash resultante.</value>
  </data>
  <data name="KeyedHashFileKeyDescription" xml:space="preserve">
    <value>A chave usada para fazer o hash do arquivo fornecido.</value>
  </data>
  <data name="KeyedHashFileResultDescription" xml:space="preserve">
    <value>A representação de string hexadecimal do arquivo com hash.</value>
  </data>
  <data name="KeyedHashFileEncodingDescription" xml:space="preserve">
    <value>A codificação usada para interpretar a chave.</value>
  </data>
  <data name="EncryptFileDisplayName" xml:space="preserve">
    <value>Encrypt File</value>
    <comment>activity name</comment>
  </data>
  <data name="EncryptFileDescription" xml:space="preserve">
    <value>Criptografa o arquivo de entrada usando o algoritmo selecionado e a chave fornecida, e salva o resultado no arquivo de saída.</value>
  </data>
  <data name="EncryptFileEncodingDescription" xml:space="preserve">
    <value>A codificação usada para interpretar a chave.</value>
  </data>
  <data name="EncryptFileInputPathDescription" xml:space="preserve">
    <value>Caminho para o arquivo que será criptografado por esta atividade.</value>
  </data>
  <data name="EncryptFileKeyDescription" xml:space="preserve">
    <value>A chave usada para criptografar o arquivo de entrada.</value>
  </data>
  <data name="EncryptFileOutputPathDescription" xml:space="preserve">
    <value>O caminho onde o arquivo criptografado será salvo.</value>
  </data>
  <data name="InputFilePathDisplayName" xml:space="preserve">
    <value>InputPath</value>
    <comment>property name</comment>
  </data>
  <data name="OutputFilePathDisplayName" xml:space="preserve">
    <value>OutputPath</value>
    <comment>property name</comment>
  </data>
  <data name="OverwriteDisplayName" xml:space="preserve">
    <value>Overwrite</value>
    <comment>property name</comment>
  </data>
  <data name="OverwriteDescription" xml:space="preserve">
    <value>Substitui o arquivo de saída se ele já existir.</value>
  </data>
  <data name="FileAlreadyExistsException" xml:space="preserve">
    <value>O arquivo já existe.</value>
  </data>
  <data name="DecryptFileDisplayName" xml:space="preserve">
    <value>Decrypt File</value>
    <comment>activity name</comment>
  </data>
  <data name="DecryptFileDescription" xml:space="preserve">
    <value>Descriptografa o arquivo de entrada usando o algoritmo selecionado e a chave fornecida, e salva o arquivo original, não criptografado.</value>
  </data>
  <data name="DecryptFileEncodingDescription" xml:space="preserve">
    <value>A codificação usada para interpretar a chave.</value>
  </data>
  <data name="DecryptFileInputPathDescription" xml:space="preserve">
    <value>Caminho para o arquivo que será descriptografado por esta atividade.</value>
  </data>
  <data name="DecryptFileKeyDescription" xml:space="preserve">
    <value>A chave usada para descriptografar o arquivo de entrada.</value>
  </data>
  <data name="DecryptFileOutputPathDescription" xml:space="preserve">
    <value>O caminho onde o arquivo descriptografado será salvo.</value>
  </data>
  <data name="GenericCryptographicException" xml:space="preserve">
    <value>Uma operação criptográfica falhou. Verifique se você usou o mesmo algoritmo e chave para as operações de criptografia e descriptografia.</value>
  </data>
  <data name="KeyEncodingDisplayName" xml:space="preserve">
    <value>KeyEncoding</value>
    <comment>property name</comment>
  </data>
  <data name="Encoding" xml:space="preserve">
    <value>Encoding</value>
  </data>
  <data name="Key" xml:space="preserve">
    <value>Chave</value>
  </data>
  <data name="Output" xml:space="preserve">
    <value>Saída</value>
  </data>
  <data name="Common" xml:space="preserve">
    <value>Comum</value>
  </data>
  <data name="ContinueOnErrorDisplayName" xml:space="preserve">
    <value>ContinueOnError</value>
    <comment>property name</comment>
  </data>
  <data name="MacTripleDesKeySizeWarning" xml:space="preserve">
    <value>MACTripleDES usa uma chave de 16 ou 24 bytes. O tamanho da sua chave depende da Codificação.</value>
  </data>
</root>