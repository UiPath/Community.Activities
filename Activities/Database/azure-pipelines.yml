resources:
  repositories:
  - repository: common
    type: github
    name: UiPath/AzurePipelinesTemplates
    ref: refs/tags/uipath.community.activities.1.3.0
    endpoint: "GitHub connection"
  - repository: automationTests
    type: github
    name: UiPath/AzurePipelinesTemplates
    ref: refs/tags/uipath.waitforbuild.1.0.3
    endpoint: "GitHub connection"

trigger:
  batch: true
  branches:
    include:
    - develop
    - masters/Database
    - release/Database/*
    - support/Database/*
  paths:
    include:
    - Activities/Database/*
    - Activities/Activities.Database.sln
    - Activities/Shared/*
    - Activities/Tools/*

pr:
  branches:
    include:
    - develop
    - masters/Database
    - release/Database/*
    - support/Database/*
  paths:
    include:
    - Activities/Database/*
    - Activities/Activities.Database.sln
    - Activities/Shared/*
    - Activities/Tools/*

variables:
  - template: ..\.pipelines\variables\variables.yml

stages:
  - template: Activities/stage.start.yml@common
    parameters:
      projectName: 'Database'
      solutionPath: '$(SolutionsPath)/Activities.Database.sln'
      sonarKeyPrefix: 'CommunityActivities'
      sdkBuild: false
      enableCDStages: false
      hasQaPackages: false

  - stage: BuildDatabaseRuntimeTests
    displayName: 'Build Database Runtime Tests'
    dependsOn:
      - Build
    jobs:
    - template: ../.pipelines/jobs/stage.build.runtime.tests.yml
      parameters:
        robotVersion: $(TestsStudioVersion)
        studioProjectPath: 'Activities/Database/UiPath.Database.Runtime.Tests/project.json'
        buildForWindows: true
        buildForPortable: true

  - stage: RunDatabaseRuntimeTestsWindows
    displayName: 'Run Database Runtime Tests Windows'
    dependsOn:
      - BuildDatabaseRuntimeTests
    jobs:
    - template: ../.pipelines/jobs/stage.run.runtime.tests.windows.yml
      parameters:
        robotVersion: $(TestsStudioVersion)
        beforeTestsCustomSteps:
          - task: DockerCompose@0
            inputs:
              dockerComposeFile: '$(Build.SourcesDirectory)/Activities/Database/UiPath.Database.Runtime.Tests/docker/docker-compose.yml'
              action: 'Run a specific service'
              serviceName: 'test_mssql_windows'
              ports:
                1433:1433
            displayName: 'Run SQL Server Image'
            env:
              MOUNT_OUTPUT: $(System.ArtifactsDirectory)

  - stage: RunDatabaseRuntimeTestsPortable
    displayName: 'Run Database Runtime Tests Portable'
    dependsOn:
      - BuildDatabaseRuntimeTests
    jobs:
    - template: ../.pipelines/jobs/stage.run.runtime.tests.portable.yml
      parameters:
        robotVersion: $(TestsStudioVersion)
        beforeTestsCustomSteps:
          - bash: |
              cd $(Build.SourcesDirectory)/Activities/Database/UiPath.Database.Runtime.Tests/docker
              docker-compose --version
              export MOUNT_OUTPUT=$(System.ArtifactsDirectory)
              chmod -R 777 $(System.ArtifactsDirectory)
              docker-compose up -d test_mssql_linux
            displayName: "Start database containers"

