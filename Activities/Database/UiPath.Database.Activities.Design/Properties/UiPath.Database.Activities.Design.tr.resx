<?xml version="1.0" encoding="UTF-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AffectedRecordsDescription" xml:space="preserve">
    <value>SQL komutunun yürütülmesinin sonucu. UPDATE, INSERT ve DELETE deyimleri için dönüş değeri komutun etkilediği satır sayısıdır. Diğer tüm deyim türleri için dönüş değeri -1&apos;dir.</value>
  </data>
  <data name="CategoryDatabase" xml:space="preserve">
    <value>Veritabanı</value>
  </data>
  <data name="CommandTypeDescription" xml:space="preserve">
    <value>Bir komut dizesinin nasıl yorumlanacağını belirtir</value>
  </data>
  <data name="ConnectionStringDescription" xml:space="preserve">
    <value>Veritabanı bağlantısı kurmak için kullanılan bağlantı dizesi</value>
  </data>
  <data name="DatabaseConnectDescription" xml:space="preserve">
    <value>Veritabanına bağlanır.</value>
  </data>
  <data name="DatabaseConnectionDescription" xml:space="preserve">
    <value>Bu etkinlik içindeki işlemler için kullanılan veritabanı bağlantısı</value>
  </data>
  <data name="DatabaseDisconnectDescription" xml:space="preserve">
    <value>Veritabanı bağlantısını kapatır.</value>
  </data>
  <data name="DataTableDescription" xml:space="preserve">
    <value>DataTable nesnesine sarılmış SQL komutunun çıkışı</value>
  </data>
  <data name="DbTransactionDescription" xml:space="preserve">
    <value>Bir veritabanına bağlanır ve bir Databaseconnection döndürerek Veritabanı etkinlikleri için bir kapsam sağlar. UseTransaction doğru olarak ayarlanırsa içerdiği işlemler tek bir işlemle yürütülür ve hiçbiri başarısız olmazsa sonunda uygulanır. UseTransaction yanlış olarak ayarlanırsa tüm işlemler ayrı ayrı tamamlanır. Bu etkinlik sona erdiğinde veritabanı bağlantısı kapatılır.</value>
  </data>
  <data name="DefaultWidth" xml:space="preserve">
    <value>300</value>
  </data>
  <data name="ExecuteNonQueryDescription" xml:space="preserve">
    <value>Veritabanında bir SQL deyimi yürütür. UPDATE, INSERT ve DELETE deyimleri için dönüş değeri komutun etkilediği satır sayısıdır. Diğer tüm deyim türleri için dönüş değeri -1&apos;dir.</value>
  </data>
  <data name="ExecuteQueryDescription" xml:space="preserve">
    <value>Veritabanında bir sorgu yürütür ve sorgu sonucunu Veri Tablosu olarak döndürür.</value>
  </data>
  <data name="ExistingDbConnectionDescription" xml:space="preserve">
    <value>Zaten açılmış bir veritabanı bağlantısı. Bu özellik ayarlanırsa Bağlantı Dizesi ve Sağlayıcı Adı özellikleri yok sayılır</value>
  </data>
  <data name="InsertDataTableDescription" xml:space="preserve">
    <value>Varolan bir Tabloya uyumlu bir DataTable ekler. Etkilenen satır sayısını döndürür.</value>
  </data>
  <data name="ParametersDescription" xml:space="preserve">
    <value>SQL komutuna bağlı adlandırılmış parametreleri içeren bir sözlük. Bağlama, SQL komutunda &apos;@parameterName&apos; deyimi belirtilerek yapılır. Çalışma zamanında parametreName sözlükten gelen değeriyle değiştirilir</value>
  </data>
  <data name="ProviderNameDescription" xml:space="preserve">
    <value>Veritabanına erişmek için kullanılan veritabanı sağlayıcısının adı. Veri Sağlayıcılarının listesi http://msdn.microsoft.com/en-us/library/a6cd7c08(v=vs.100).aspx adresinde bulunabilir</value>
  </data>
  <data name="SqlDescription" xml:space="preserve">
    <value>Seçili komut türüne karşılık gelen bir SQL ifadesi sağlayın</value>
  </data>
  <data name="TableNameDescription" xml:space="preserve">
    <value>Hedef veritabanı tablosu</value>
  </data>
  <data name="TimeoutMSDescription" xml:space="preserve">
    <value>Hata oluşturulmadan önce SQL komutunun çalışmasının bekleneceği süreyi (milisaniye olarak) belirtir. Varsayılan değer 30000 milisaniyedir (30 saniye) ve 0&apos;dan büyük veya 0&apos;a eşit olmalıdır.</value>
  </data>
  <data name="UseTransactionDescription" xml:space="preserve">
    <value>Bu etkinlik içindeki veritabanı işlemlerinin bir veritabanı işlemine sarılıp sarılmayacağını belirtir</value>
  </data>
  <data name="AffectedRecordsInsertDescription" xml:space="preserve">
    <value>Eklenen satırların sayısı</value>
  </data>
  <data name="ConfigureConnection" xml:space="preserve">
    <value>Bağlantıyı Yapılandır...</value>
  </data>
  <data name="InserDataTableInputDescription" xml:space="preserve">
    <value>Tabloya eklenecek DataTable nesnesi. DataTable sütunları açıklaması veritabanı tablosundaki sütunlar ile eşleşmelidir</value>
  </data>
  <data name="ConnectionWizard" xml:space="preserve">
    <value>Bağlantı Sihirbazı</value>
  </data>
  <data name="DoubleClickToView" xml:space="preserve">
    <value>Görüntülemek için çift tıklatın</value>
  </data>
  <data name="EditConnectionSettings" xml:space="preserve">
    <value>Bağlantı Ayarlarını Düzenle</value>
  </data>
  <data name="NewDatabaseConnection" xml:space="preserve">
    <value>Yeni Veritabanı Bağlantısı</value>
  </data>
  <data name="Parameters" xml:space="preserve">
    <value>Parametreler</value>
  </data>
  <data name="DisplayName" xml:space="preserve">
    <value>GörünenAd</value>
    <comment>property name</comment>
  </data>
  <data name="ConnectionString" xml:space="preserve">
    <value>Bağlantı Dizesi</value>
  </data>
  <data name="DatabaseConnection" xml:space="preserve">
    <value>Veritabanı bağlantısı</value>
  </data>
  <data name="DataTable" xml:space="preserve">
    <value>Veri Tablosu</value>
  </data>
  <data name="DropActivityHere" xml:space="preserve">
    <value>Etkinliği buraya bırak</value>
  </data>
  <data name="EditSql" xml:space="preserve">
    <value>Sql Düzenle</value>
  </data>
  <data name="ExistingDatabaseConnection" xml:space="preserve">
    <value>Var Olan Veritabanı Bağlantısı</value>
  </data>
  <data name="SqlQueryHint" xml:space="preserve">
    <value>SQL sorgusu. Metin tırnak işareti içine alınmalıdır</value>
  </data>
  <data name="TableNameHint" xml:space="preserve">
    <value>Tablo adı. Metin tırnak işareti içine alınmalıdır</value>
  </data>
  <data name="QueryTimeoutMSDescription" xml:space="preserve">
    <value>Bir hata oluşturulmadan önce SQL sorgusunun çalışmasının bekleneceği süreyi (milisaniye olarak) belirtir (sorgu sonucu almaya yönelik yanıt süresini içermez). Varsayılan değer 30000 milisaniyedir (30 saniye) ve 0&apos;dan büyük veya 0&apos;a eşit olmalıdır.</value>
  </data>
  <data name="CategoryAppIntegration" xml:space="preserve">
    <value>App Integration</value>
  </data>
  <data name="CollectionLabel" xml:space="preserve">
    <value>(Koleksiyon)</value>
  </data>
  <data name="ContinueOnError" xml:space="preserve">
    <value>ContinueOnError Boole</value>
  </data>
  <data name="BulkInsert_DataTable" xml:space="preserve">
    <value>Giriş veri tablosu</value>
  </data>
  <data name="BulkInsert_DataTable_Description" xml:space="preserve">
    <value>Öğeler için eklenecek kaynak DataTable.</value>
  </data>
  <data name="BulkInsert_DataTable_Placeholder" xml:space="preserve">
    <value>VeriTablosu değişkenini sağlayın</value>
  </data>
  <data name="BulkInsert_TableName" xml:space="preserve">
    <value>Hedef tablo adı</value>
  </data>
  <data name="BulkInsert_TableName_Description" xml:space="preserve">
    <value>Öğeleri eklemek istediğiniz veritabanı tablosunun adı.</value>
  </data>
  <data name="BulkInsert_TableName_Placeholder" xml:space="preserve">
    <value>Hedef veritabanı tablo adını sağlayın</value>
  </data>
  <data name="BulkUpdate_ColumnNames" xml:space="preserve">
    <value>Eşleşen satırlar için kullanılan sütunlar</value>
  </data>
  <data name="BulkUpdate_ColumnNames_Placeholder" xml:space="preserve">
    <value>Satır eşleştirmek için kullanılan sütun adları</value>
  </data>
  <data name="BulkUpdateDescription" xml:space="preserve">
    <value>Mevcut bir Tablo&apos;daki uyumlu DataTable&apos;i güncelleştirir. Ana anahtar olarak kullanılan sütun adları koleksiyonunda yer almayan sütunları güncelleştirir. Etkilenen satır sayısını döndürür.</value>
  </data>
  <data name="AffectedRecordsUpdateDescription" xml:space="preserve">
    <value>Güncelleştirilen satırların sayısı</value>
  </data>
  <data name="BulkFlagDescription" xml:space="preserve">
    <value>Doğru ise, Toplu eklemeyi kullanarak geçici bir tablo oluşturur ve tablolar arasında birleştirmeyi kullanarak güncelleştirir, aksi takdirde toplu olarak toplu güncelleştirmeler yayımlar.</value>
  </data>
  <data name="UpdateDataTableInputDescription" xml:space="preserve">
    <value>Tabloyu güncelleştirmek için kullanılacak DataTable nesnesi. DataTable sütunlarının açıklaması veritabanı tablosundaki sütunlarla eşleşmeli ve bunların bir alt kümesi olmalıdır</value>
  </data>
  <data name="BulkInsertDescription" xml:space="preserve">
    <value>Belirli veritabanı sürücü uygulamasını kullanarak Toplu işlemlerin kullanıldığı bir tabloyu güncelleştirir. Veritabanı sürücüsü Toplu işlemleri desteklemiyorsa Insert Data Table&apos;a geri döner.</value>
  </data>
  <data name="ConnectionSecureStringDescription" xml:space="preserve">
    <value>Güvenli Dize olarak bir veritabanı bağlantısı kurmak için kullanılan bağlantı dizesi</value>
  </data>
  <data name="ActivitySynonymDatabaseConnect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="ActivitySynonymDatabaseDisconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="ActivitySynonymExecuteNonQuery" xml:space="preserve">
    <value>Execute Non Query</value>
  </data>
  <data name="ActivitySynonymExecuteQuery" xml:space="preserve">
    <value>Execute Query</value>
  </data>
  <data name="SqlQuery" xml:space="preserve">
    <value>SQL sorgusu</value>
  </data>
  <data name="EditButton" xml:space="preserve">
    <value>Düzenle</value>
  </data>
  <data name="SqlCommand" xml:space="preserve">
    <value>SQL Komutu</value>
  </data>
  <data name="SqlCommandHint" xml:space="preserve">
    <value>Sql komutu. Metin tırnak işareti içine alınmalıdır</value>
  </data>
</root>