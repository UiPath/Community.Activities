//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UiPath.Database.Activities.Design.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class UiPath_Database_Activities_Design {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal UiPath_Database_Activities_Design() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UiPath.Database.Activities.Design.Properties.UiPath.Database.Activities.Design", typeof(UiPath_Database_Activities_Design).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect.
        /// </summary>
        public static string ActivitySynonymDatabaseConnect {
            get {
                return ResourceManager.GetString("ActivitySynonymDatabaseConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnect.
        /// </summary>
        public static string ActivitySynonymDatabaseDisconnect {
            get {
                return ResourceManager.GetString("ActivitySynonymDatabaseDisconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execute Non Query.
        /// </summary>
        public static string ActivitySynonymExecuteNonQuery {
            get {
                return ResourceManager.GetString("ActivitySynonymExecuteNonQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execute Query.
        /// </summary>
        public static string ActivitySynonymExecuteQuery {
            get {
                return ResourceManager.GetString("ActivitySynonymExecuteQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result of the execution of the sql command. For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1..
        /// </summary>
        public static string AffectedRecordsDescription {
            get {
                return ResourceManager.GetString("AffectedRecordsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of inserted rows.
        /// </summary>
        public static string AffectedRecordsInsertDescription {
            get {
                return ResourceManager.GetString("AffectedRecordsInsertDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of updatedrows.
        /// </summary>
        public static string AffectedRecordsUpdateDescription {
            get {
                return ResourceManager.GetString("AffectedRecordsUpdateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true will create a temp table using Bulk insert and will update using join between tables, else will issue bulk updates in batch..
        /// </summary>
        public static string BulkFlagDescription {
            get {
                return ResourceManager.GetString("BulkFlagDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input data table.
        /// </summary>
        public static string BulkInsert_DataTable {
            get {
                return ResourceManager.GetString("BulkInsert_DataTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source DataTable for the items to be inserted..
        /// </summary>
        public static string BulkInsert_DataTable_Description {
            get {
                return ResourceManager.GetString("BulkInsert_DataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provide the DataTable variable.
        /// </summary>
        public static string BulkInsert_DataTable_Placeholder {
            get {
                return ResourceManager.GetString("BulkInsert_DataTable_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target table name.
        /// </summary>
        public static string BulkInsert_TableName {
            get {
                return ResourceManager.GetString("BulkInsert_TableName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the database table where you want to insert the items..
        /// </summary>
        public static string BulkInsert_TableName_Description {
            get {
                return ResourceManager.GetString("BulkInsert_TableName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provide the target database table name.
        /// </summary>
        public static string BulkInsert_TableName_Placeholder {
            get {
                return ResourceManager.GetString("BulkInsert_TableName_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Will update a table using Bulk operations using the specific database driver implementation. Will fallback to Insert Data Table if the database driver does not support Bulk operations..
        /// </summary>
        public static string BulkInsertDescription {
            get {
                return ResourceManager.GetString("BulkInsertDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Columns used for matching rows.
        /// </summary>
        public static string BulkUpdate_ColumnNames {
            get {
                return ResourceManager.GetString("BulkUpdate_ColumnNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column names used for row matching.
        /// </summary>
        public static string BulkUpdate_ColumnNames_Placeholder {
            get {
                return ResourceManager.GetString("BulkUpdate_ColumnNames_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates a compatible DataTable in a existing Table. Will update all the columns that are not in the collection of column names used as a primary key. Returns the number of rows affected..
        /// </summary>
        public static string BulkUpdateDescription {
            get {
                return ResourceManager.GetString("BulkUpdateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Integration.
        /// </summary>
        public static string CategoryAppIntegration {
            get {
                return ResourceManager.GetString("CategoryAppIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database.
        /// </summary>
        public static string CategoryDatabase {
            get {
                return ResourceManager.GetString("CategoryDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Collection).
        /// </summary>
        public static string CollectionLabel {
            get {
                return ResourceManager.GetString("CollectionLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies how a command string is interpreted.
        /// </summary>
        public static string CommandTypeDescription {
            get {
                return ResourceManager.GetString("CommandTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Connection....
        /// </summary>
        public static string ConfigureConnection {
            get {
                return ResourceManager.GetString("ConfigureConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection string used to establish a database connection as Secure String.
        /// </summary>
        public static string ConnectionSecureStringDescription {
            get {
                return ResourceManager.GetString("ConnectionSecureStringDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection String.
        /// </summary>
        public static string ConnectionString {
            get {
                return ResourceManager.GetString("ConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection string used to establish a database connection.
        /// </summary>
        public static string ConnectionStringDescription {
            get {
                return ResourceManager.GetString("ConnectionStringDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Wizard.
        /// </summary>
        public static string ConnectionWizard {
            get {
                return ResourceManager.GetString("ConnectionWizard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ContinueOnError Boolean.
        /// </summary>
        public static string ContinueOnError {
            get {
                return ResourceManager.GetString("ContinueOnError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connects to a database..
        /// </summary>
        public static string DatabaseConnectDescription {
            get {
                return ResourceManager.GetString("DatabaseConnectDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database connection.
        /// </summary>
        public static string DatabaseConnection {
            get {
                return ResourceManager.GetString("DatabaseConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database connection used for the operations within this activity.
        /// </summary>
        public static string DatabaseConnectionDescription {
            get {
                return ResourceManager.GetString("DatabaseConnectionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Closes a connection to a database..
        /// </summary>
        public static string DatabaseDisconnectDescription {
            get {
                return ResourceManager.GetString("DatabaseDisconnectDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data Table.
        /// </summary>
        public static string DataTable {
            get {
                return ResourceManager.GetString("DataTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output of the sql command wrapped in a DataTable object.
        /// </summary>
        public static string DataTableDescription {
            get {
                return ResourceManager.GetString("DataTableDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connects to a database  and returns a DatabaseConnection, providing a scope for Database activities. If UseTransaction is set true, the contained operations are executed in a single transaction, and applied at the end if none of the them failed. If UseTransaction is set false, all operations are commited individualy. When this activity ends, the connection to the database is closed..
        /// </summary>
        public static string DbTransactionDescription {
            get {
                return ResourceManager.GetString("DbTransactionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 300.
        /// </summary>
        public static string DefaultWidth {
            get {
                return ResourceManager.GetString("DefaultWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DisplayName.
        /// </summary>
        public static string DisplayName {
            get {
                return ResourceManager.GetString("DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Double-click to view.
        /// </summary>
        public static string DoubleClickToView {
            get {
                return ResourceManager.GetString("DoubleClickToView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop activity here.
        /// </summary>
        public static string DropActivityHere {
            get {
                return ResourceManager.GetString("DropActivityHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit.
        /// </summary>
        public static string EditButton {
            get {
                return ResourceManager.GetString("EditButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Connection Settings.
        /// </summary>
        public static string EditConnectionSettings {
            get {
                return ResourceManager.GetString("EditConnectionSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Sql.
        /// </summary>
        public static string EditSql {
            get {
                return ResourceManager.GetString("EditSql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executes a SQL statement on a database. For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1..
        /// </summary>
        public static string ExecuteNonQueryDescription {
            get {
                return ResourceManager.GetString("ExecuteNonQueryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executes a query on a database and returns and the query result in a Data Table..
        /// </summary>
        public static string ExecuteQueryDescription {
            get {
                return ResourceManager.GetString("ExecuteQueryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Existing Database Connection.
        /// </summary>
        public static string ExistingDatabaseConnection {
            get {
                return ResourceManager.GetString("ExistingDatabaseConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An already opened database connection. If this property is set Connection String and Provider Name properties are ignored.
        /// </summary>
        public static string ExistingDbConnectionDescription {
            get {
                return ResourceManager.GetString("ExistingDbConnectionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DataTable object that will be inserted in the Table. The DataTable columns description must match the columns from the database table.
        /// </summary>
        public static string InserDataTableInputDescription {
            get {
                return ResourceManager.GetString("InserDataTableInputDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inserts a compatible DataTable in a existing Table. Returns the number of rows affected..
        /// </summary>
        public static string InsertDataTableDescription {
            get {
                return ResourceManager.GetString("InsertDataTableDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Database Connection.
        /// </summary>
        public static string NewDatabaseConnection {
            get {
                return ResourceManager.GetString("NewDatabaseConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters.
        /// </summary>
        public static string Parameters {
            get {
                return ResourceManager.GetString("Parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A dictionary of named parameters that are bound to the sql command. The binding is done by specifying the &apos;@parameterName&apos; statement in the sql command. At runtime the parameterName will be replaced with its value from the dictionary.
        /// </summary>
        public static string ParametersDescription {
            get {
                return ResourceManager.GetString("ParametersDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the database provider used to access the database. A list of Data Providers can be found at http://msdn.microsoft.com/en-us/library/a6cd7c08(v=vs.100).aspx.
        /// </summary>
        public static string ProviderNameDescription {
            get {
                return ResourceManager.GetString("ProviderNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the amount of time (in milliseconds) to wait for the sql query to run before an error is thrown (it doesn&apos;t include the response time for the query result retrieval). The default value is 30000 milliseconds (30 seconds) and must be greater than or equal to 0..
        /// </summary>
        public static string QueryTimeoutMSDescription {
            get {
                return ResourceManager.GetString("QueryTimeoutMSDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQL Command.
        /// </summary>
        public static string SqlCommand {
            get {
                return ResourceManager.GetString("SqlCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sql command. Text must be quoted.
        /// </summary>
        public static string SqlCommandHint {
            get {
                return ResourceManager.GetString("SqlCommandHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provide an SQL statement that corresponds to the selected command type.
        /// </summary>
        public static string SqlDescription {
            get {
                return ResourceManager.GetString("SqlDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQL query.
        /// </summary>
        public static string SqlQuery {
            get {
                return ResourceManager.GetString("SqlQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sql query. Text must be quoted.
        /// </summary>
        public static string SqlQueryHint {
            get {
                return ResourceManager.GetString("SqlQueryHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target database table.
        /// </summary>
        public static string TableNameDescription {
            get {
                return ResourceManager.GetString("TableNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Table name. Text must be quoted.
        /// </summary>
        public static string TableNameHint {
            get {
                return ResourceManager.GetString("TableNameHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the amount of time (in milliseconds) to wait for the sql command to run before an error is thrown. The default value is 30000 milliseconds (30 seconds) and must be greater than or equal to 0..
        /// </summary>
        public static string TimeoutMSDescription {
            get {
                return ResourceManager.GetString("TimeoutMSDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DataTable object that will be used in updating the Table. The DataTable columns description must match the columns from the database table and be a subset of them.
        /// </summary>
        public static string UpdateDataTableInputDescription {
            get {
                return ResourceManager.GetString("UpdateDataTableInputDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies if the database operations within this activity should be wrapped in a database transaction.
        /// </summary>
        public static string UseTransactionDescription {
            get {
                return ResourceManager.GetString("UseTransactionDescription", resourceCulture);
            }
        }
    }
}
