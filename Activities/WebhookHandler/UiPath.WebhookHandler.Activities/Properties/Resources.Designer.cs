//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UiPath.WebhookHandler.Activities.Properties {
    using System;
    
    
    /// <summary>
    ///   지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
    /// </summary>
    // 이 클래스는 ResGen 또는 Visual Studio와 같은 도구를 통해 StronglyTypedResourceBuilder
    // 클래스에서 자동으로 생성되었습니다.
    // 멤버를 추가하거나 제거하려면 .ResX 파일을 편집한 다음 /str 옵션을 사용하여 ResGen을
    // 다시 실행하거나 VS 프로젝트를 다시 빌드하십시오.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UiPath.WebhookHandler.Activities.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대해 현재 스레드의 CurrentUICulture 속성을
        ///   재정의합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Authentication과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Authentication_Category {
            get {
                return ResourceManager.GetString("Authentication_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Common과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Common_Category {
            get {
                return ResourceManager.GetString("Common_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If set, continue executing the remaining activities even if the current activity has failed.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string ContinueOnError_Description {
            get {
                return ResourceManager.GetString("ContinueOnError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ContinueOnError과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string ContinueOnError_DisplayName {
            get {
                return ResourceManager.GetString("ContinueOnError_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Do {
            get {
                return ResourceManager.GetString("Do", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Handler과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Handler_Description {
            get {
                return ResourceManager.GetString("Handler_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Handler과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Handler_DisplayName {
            get {
                return ResourceManager.GetString("Handler_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Listening endpoint which ends with &quot;/&quot; 과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Handler_Endpoint_Description {
            get {
                return ResourceManager.GetString("Handler_Endpoint_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Endpoint과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Handler_Endpoint_DisplayName {
            get {
                return ResourceManager.GetString("Handler_Endpoint_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Channel name for IPC communiction과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Handler_IpcChannel_Description {
            get {
                return ResourceManager.GetString("Handler_IpcChannel_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   IpcChannel과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Handler_IpcChannel_DisplayName {
            get {
                return ResourceManager.GetString("Handler_IpcChannel_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Webhook route path starts with &quot;/&quot;과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Handler_RoutePath_Description {
            get {
                return ResourceManager.GetString("Handler_RoutePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   RoutePath과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Handler_RoutePath_DisplayName {
            get {
                return ResourceManager.GetString("Handler_RoutePath_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Input과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Input_Category {
            get {
                return ResourceManager.GetString("Input_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Options과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Options_Category {
            get {
                return ResourceManager.GetString("Options_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Output과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Output_Category {
            get {
                return ResourceManager.GetString("Output_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Start Webhook handler 과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Start_Description {
            get {
                return ResourceManager.GetString("Start_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Start과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Start_DisplayName {
            get {
                return ResourceManager.GetString("Start_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Handler instannce과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Start_Handler_Description {
            get {
                return ResourceManager.GetString("Start_Handler_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Handler과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Start_Handler_DisplayName {
            get {
                return ResourceManager.GetString("Start_Handler_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Route Path과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Start_RoutePath_Description {
            get {
                return ResourceManager.GetString("Start_RoutePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   RoutePath과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Start_RoutePath_DisplayName {
            get {
                return ResourceManager.GetString("Start_RoutePath_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Webhook handler service port과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Start_ServicePort_Description {
            get {
                return ResourceManager.GetString("Start_ServicePort_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ServicePort과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Start_ServicePort_DisplayName {
            get {
                return ResourceManager.GetString("Start_ServicePort_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stop webhook handler과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Stop_Description {
            get {
                return ResourceManager.GetString("Stop_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stop과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Stop_DisplayName {
            get {
                return ResourceManager.GetString("Stop_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Webhook handler instance과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Stop_Handler_Description {
            get {
                return ResourceManager.GetString("Stop_Handler_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Handler과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Stop_Handler_DisplayName {
            get {
                return ResourceManager.GetString("Stop_Handler_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specifies the amount of time (in milliseconds) to wait for the activity to run before an error is thrown. The default value is 60000 (1 minute).과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Timeout_Description {
            get {
                return ResourceManager.GetString("Timeout_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Timeout (milliseconds)과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Timeout_DisplayName {
            get {
                return ResourceManager.GetString("Timeout_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The activity timed out and was canceled.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Timeout_Error {
            get {
                return ResourceManager.GetString("Timeout_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please provide a value either for {0} or {1}, but not both.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string ValidationExclusiveProperties_Error {
            get {
                return ResourceManager.GetString("ValidationExclusiveProperties_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please provide values for both {0} and {1}.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string ValidationOverloadGroup_Error {
            get {
                return ResourceManager.GetString("ValidationOverloadGroup_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cannot be used outside of a {0}.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string ValidationScope_Error {
            get {
                return ResourceManager.GetString("ValidationScope_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please provide a value for {0}.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string ValidationValue_Error {
            get {
                return ResourceManager.GetString("ValidationValue_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Webhook handler scope과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string WebhookHandler_Description {
            get {
                return ResourceManager.GetString("WebhookHandler_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Webhook Handler과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string WebhookHandler_DisplayName {
            get {
                return ResourceManager.GetString("WebhookHandler_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Listening port number과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string WebhookHandler_ServicePort_Description {
            get {
                return ResourceManager.GetString("WebhookHandler_ServicePort_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ServicePort과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string WebhookHandler_ServicePort_DisplayName {
            get {
                return ResourceManager.GetString("WebhookHandler_ServicePort_DisplayName", resourceCulture);
            }
        }
    }
}
