parameters:
  - name: buildPipeline
    type: string
  - name: packagesFolder
    type: string
  - name: studioInstallPath
    type: string
  - name: uipathTestDirectory
    type: string
  - name: DownloadC
    type: string
    default: "'d:/teste/FTPandSFTP/FTPFolder/DownloadRSA'"
  - name: DownloadP
    type: string
    default: "'d:/teste/FTPandSFTP/FTPFolder/DownloadUserPass'"
  - name: LocalPathC
    type: string
    default: "'d:/teste/FTPandSFTP/FTPFolder'"
  - name: LocalPathP
    type: string
    default: "'d:/teste/FTPandSFTP/FTPFolder'"
  - name: PassP
    type: string
    default: "'password'"
  - name: Port
    type: string
    default: "2022"
  - name: RemotePathC
    type: string
    default: "'/'"
  - name: RemotePathP
    type: string
    default: "'/'"
  - name: UserC
    type: string
    default: "'usercert'"
  - name: UserP
    type: string
    default: "'userpass'"


steps:
   - task: DownloadPipelineArtifact@2
     displayName: Download artifact from build pipeline
     inputs:
      source: 'specific'
      project: 'Community'
      pipeline: ${{ parameters.buildPipeline }}
      runVersion: 'latest'
      path: ${{ parameters.packagesFolder }}

   - task: PowerShell@2
     displayName: Update Nuget Packages from UiPath Dev
     inputs:
      targetType: 'inline'
      ignoreLASTEXITCODE: true
      script: |
        cd ${{ parameters.packagesFolder }}
        $file = Get-ChildItem -Path .\ -Filter *.nupkg -Recurse -File -Name -Exclude *symbols*
        $dot = $file.LastIndexof('.')
        $file = $file.Replace(".nupkg","")
        $act = $file.LastIndexof('Activities.')
        $version = $file.Substring($act+11)
        Write-Host Update to version $version
        Write-Host "##vso[build.updatebuildnumber]$version"
        cd ${{ parameters.studioInstallPath }}
        .\UiPath.Studio.CommandLine.exe manage --project-path "$(uipathTestDirectory)\FTPandSFTP\project.json" --add-ref "UiPath.FTP.Activities|$version|strict"

   - task: PowerShell@2
     displayName: Run SFTP User Pass Tests VB
     inputs:
      targetType: 'inline'
      script: |
       Start-Sleep -s 300
       $(studioInstallPath)\uirobot.exe execute --file "$(uipathTestDirectory)\FTPandSFTP\FTPtestsUserPass.xaml" --input "{ 'LocalPath' : ${{ parameters.LocalPathP }}, 'Remotepath' : ${{ parameters.RemotePathP}}, 'DownloadUserPass' : ${{ parameters.DownloadP}}, 'User' : ${{ parameters.UserP}}, 'Pass' : ${{ parameters.PassP}}, 'Host' : '$env:sftpPublicIP', 'PortPass' : ${{ parameters.Port}} }"
       Copy-Item "$(uipathTestDirectory)\FTPandSFTP\junit*.xml" -Destination "$(Build.ArtifactStagingDirectory)\junit_SFTP_UserPASS.xml"
       Remove-Item "$(uipathTestDirectory)\FTPandSFTP\junit*.xml"

   - task: DownloadSecureFile@1
     name: loginCertificate
     displayName: 'Download Login Certificate'
     inputs:
       secureFile: 'id_rsa'
   - script: |
      cp $(loginCertificate.secureFilePath) "$(uipathTestDirectory)\FTPandSFTP\id_rsa"

   - task: PowerShell@2
     displayName: Run SFTP Certificate Tests VB
     inputs:
      targetType: 'inline'
      script: |
       $path = "$(uipathTestDirectory)/FTPandSFTP/id_rsa"
       $path = $path.Replace('\','/')
       $(studioInstallPath)\uirobot.exe execute --file "$(uipathTestDirectory)\FTPandSFTP\FTPtestsUserRSA.xaml" --input "{ 'LocalPath' : ${{ parameters.LocalPathC }}, 'Remotepath' : ${{ parameters.RemotePathC}}, 'DownloadRSA' : ${{ parameters.DownloadC}}, 'User' : ${{ parameters.UserC}}, 'CertificatePathPPK': '$path', 'Host' : '$env:sftpPublicIP', 'PortRSA' : ${{ parameters.Port }} }"
       Copy-Item "$(uipathTestDirectory)\FTPandSFTP\junit*.xml" -Destination "$(Build.ArtifactStagingDirectory)\junit_SFTP_Certificate.xml"
       Remove-Item "$(uipathTestDirectory)\FTPandSFTP\junit*.xml"

   - task: PublishBuildArtifacts@1
     displayName: "Publish test files as Artifacts"
     inputs:
       PathtoPublish:  '$(Build.ArtifactStagingDirectory)'
       ArtifactName:   'SFTP Integration Tests for $(Build.BuildNumber)'
       ArtifactType:   'Container'

   - task: PublishTestResults@2
     displayName: "Publish test results as Test Runs output"
     inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'junit*.xml'
        searchFolder: '$(Build.ArtifactStagingDirectory)'
        testRunTitle: 'SFTP Integration Tests for $(Build.BuildNumber)'