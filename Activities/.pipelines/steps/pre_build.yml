parameters:
  NuGetVersionSpec: "4.3.0"
  rootPath: ""
  versionReference: ""

steps:
- task: PowerShell@1
  displayName: "Set Build Version"
  inputs:
    scriptType: "inlineScript"
    inlineScript: |
      $versionReferenceFile = "${{ parameters.rootPath }}${{ parameters.versionReference }}"
      Write-Host "versionReferenceFile: $versionReferenceFile"

      $major = 1
      $minor = 0

      if (-not (Test-Path -Path  $versionReferenceFile )) {
        Write-Host "file $versionReferenceFile not found"
      } else {
        # select the version line, remove any comments 
        $vers = cat $versionReferenceFile|Select-String -Pattern AssemblyVersion|Select-String -NotMatch "^//.*AssemblyVersion"|select -Last 1

        $match =  $vers.Line.split("(").split(".")[1].replace('"','')
        if (  $match -match "^\d*$" ){ $major = $match } 
        else {  Write-Host "version major was not found" }
        
        $match =  $vers.Line.split("(").split(".")[2] 
        if (  $match -match "^\d*$" ){ $minor = $match } 
        else {  Write-Host "version minor was not found" }
      }

      $now = Get-Date 
      $y2k = Get-Date -Year 2000 -Month 1 -Day 1 
      $build = [int]($now - $y2k).TotalDays 
      $revision = [int]($now.TimeOfDay.TotalSeconds / 2) 
      $version = "$major.$minor.$build.$revision" 
      Write-Host "$version" 
      Write-Host "##vso[build.updatebuildnumber]$version"

- powershell: |      
      Write-Output "##vso[task.setvariable variable=sourceBranch;]${{ variables['Build.SourceBranch'] }}" >  $(Build.ArtifactStagingDirectory)/pipeline.env
  displayName: "Add variables to artifacts"

- task: NuGetToolInstaller@1
  displayName: "Use NuGet ${{ parameters.NuGetVersionSpec }}"
  inputs:
    versionSpec: ${{ parameters.NuGetVersionSpec }}
