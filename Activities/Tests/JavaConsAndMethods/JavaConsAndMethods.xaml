<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.timeMS="15000" this:Main.invkTargetType="uipath.java.test.GenericMethods" this:Main.GenericMethodsStringConcat="GenericMethods" this:Main.AmbiguityMethodName="GenericMethods" this:Main.IntArrayParam="[{5,6,7}]" this:Main.IntParamSM="4" this:Main.RecursiveCallTest="RecursiveCallTest" this:Main.GenericsExtendObject="GenericsExtObj" this:Main.GenericsExtObjDoubleArrayParam="[{2.3,4.5}]" this:Main.IntArrayMethod="IntArr" this:Main.ConcatenateXYZ="ConcatenateXYZ" this:Main.BooleanType="BoolType" this:Main.GenericsR="GenericsR" this:Main.GenericsExtendString="GenericsExtString" this:Main.StaticIntType="IntType" this:Main.StaticRecursiveCallTest="StaticRecursiveCallTest" this:Main.SMIntParam="3" this:Main.GenericExtObjStringParam="Test GenericsExtObjParam string" this:Main.GenericExtStringParam="Genereics extend string" this:Main.StrConcatParam2="String2 paramTest" this:Main.StrConcatParam1="String1 paramTest" this:Main.StrArrNonStaticParam="[{&quot;String1 Test&quot;,&quot;String2 Test&quot;,&quot;String3 Test&quot;}]" this:Main.StrArrayNonStatic="StringArrNonStatic" this:Main.StrArrStaticParam="[{&quot;Static method String Param&quot;,&quot;Another string&quot;}]" this:Main.SMBoolParam="True" this:Main.GenericsRStrParam="2 it's a string" this:Main.RecursiveCallTestParam="5" this:Main.StringParamValidation="StringParamValidation" this:Main.StringParamValidationParam="String_test_validation" this:Main.GenericMethodsStringArr="GenericMethods" this:Main.AmbiguousMethodStrArrParam="[{&quot;String1&quot;,&quot;String2&quot;,&quot;String3&quot;}]" this:Main.StringArrStatic="StringArrStatic" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="http://schemas.uipath.com/workflow/activities/java" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uja="clr-namespace:UiPath.Java.Activities;assembly=UiPath.Java.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="javapath" Type="InArgument(x:String)" />
    <x:Property Name="jarpath" Type="InArgument(x:String)" />
    <x:Property Name="timeMS" Type="InArgument(x:Int32)" />
    <x:Property Name="invkTargetType" Type="InArgument(x:String)" />
    <x:Property Name="GenericMethodsStringConcat" Type="InArgument(x:String)" />
    <x:Property Name="AmbiguityMethodName" Type="InArgument(x:String)" />
    <x:Property Name="IntArrayParam" Type="InArgument(s:Int32[])" />
    <x:Property Name="IntParamSM" Type="InArgument(x:Int32)" />
    <x:Property Name="RecursiveCallTest" Type="InArgument(x:String)" />
    <x:Property Name="GenericsExtendObject" Type="InArgument(x:String)" />
    <x:Property Name="GenericsExtObjDoubleArrayParam" Type="InArgument(s:Double[])" />
    <x:Property Name="IntArrayMethod" Type="InArgument(x:String)" />
    <x:Property Name="ConcatenateXYZ" Type="InArgument(x:String)" />
    <x:Property Name="BooleanType" Type="InArgument(x:String)" />
    <x:Property Name="GenericsR" Type="InArgument(x:String)" />
    <x:Property Name="GenericsExtendString" Type="InArgument(x:String)" />
    <x:Property Name="StaticIntType" Type="InArgument(x:String)" />
    <x:Property Name="StaticRecursiveCallTest" Type="InArgument(x:String)" />
    <x:Property Name="SMIntParam" Type="InArgument(x:Int32)" />
    <x:Property Name="GenericExtObjStringParam" Type="InArgument(x:String)" />
    <x:Property Name="GenericExtStringParam" Type="InArgument(x:String)" />
    <x:Property Name="StrConcatParam2" Type="InArgument(x:String)" />
    <x:Property Name="StrConcatParam1" Type="InArgument(x:String)" />
    <x:Property Name="StrArrNonStaticParam" Type="InArgument(s:String[])" />
    <x:Property Name="StrArrayNonStatic" Type="InArgument(x:String)" />
    <x:Property Name="StrArrStaticParam" Type="InArgument(s:String[])" />
    <x:Property Name="SMBoolParam" Type="InArgument(x:Boolean)" />
    <x:Property Name="GenericsRStrParam" Type="InArgument(x:String)" />
    <x:Property Name="RecursiveCallTestParam" Type="InArgument(x:Int32)" />
    <x:Property Name="StringParamValidation" Type="InArgument(x:String)" />
    <x:Property Name="StringParamValidationParam" Type="InArgument(x:String)" />
    <x:Property Name="GenericMethodsStringArr" Type="InArgument(x:String)" />
    <x:Property Name="AmbiguousMethodStrArrParam" Type="InArgument(s:String[])" />
    <x:Property Name="StringArrStatic" Type="InArgument(x:String)" />
    <x:Property Name="Test_Result" Type="OutArgument(x:String)" />
    <x:Property Name="Project_Dependencies" Type="InArgument(x:String)" />
  </x:Members>
  <this:Main.Project_Dependencies>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.Project_Dependencies>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>824,1920</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="36">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Java.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Java</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="25">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Java</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Java Tests" sap:VirtualizedContainerService.HintSize="379.2,1755.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="DataTable" />
      <Variable x:TypeArguments="x:String" Default="UiPath.Java.Activities" Name="PackageName" />
      <Variable x:TypeArguments="x:String" Name="PackageVersion" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:BuildDataTable DataTable="[DataTable]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="337.6,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Test&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;500&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Duration&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;500&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Result&quot; msdata:Caption=&quot;&quot; type=&quot;xs:boolean&quot; default=&quot;true&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ErrorMessage&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;50000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;ExceptionType&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;5000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    <uja:JavaScope TimeoutMS="{x:Null}" DisplayName="Java Scope" sap:VirtualizedContainerService.HintSize="337.6,1346.4" sap2010:WorkflowViewState.IdRef="JavaScope_2" JavaPath="[javapath]">
      <uja:JavaScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="JavaInvokerProperty" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="304,1309.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Sequence.Variables>
              <Variable x:TypeArguments="p:JavaObject" Name="ConstructorObj" />
              <Variable x:TypeArguments="p:JavaObject" Name="MRConcatStrings" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Load jar" sap:VirtualizedContainerService.HintSize="262.4,68.8" sap2010:WorkflowViewState.IdRef="Sequence_41">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <uja:LoadJar sap2010:Annotation.AnnotationText="Load Test jar" DisplayName="Load Jar" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="LoadJar_2" JarPath="TestProgram.jar">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </uja:LoadJar>
              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Jar load&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="Load jar" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
            </Sequence>
            <TryCatch DisplayName="Try Catch Non Existent Method" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <Sequence sap:VirtualizedContainerService.HintSize="376,260" sap2010:WorkflowViewState.IdRef="Sequence_45">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <uja:CreateJavaObject ParametersList="{x:Null}" sap2010:Annotation.AnnotationText="Creating the JavaObject&#xA;" DisplayName="Create Object" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="CreateJavaObject_3" Result="[ConstructorObj]" TargetType="NonExistentMethod">
                    <uja:CreateJavaObject.Parameters>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <InArgument x:TypeArguments="x:String">String Test</InArgument>
                      </scg:List>
                    </uja:CreateJavaObject.Parameters>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </uja:CreateJavaObject>
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Create Object Nonexisting method&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="Create Object Nonexisting method" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_40" />
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,104" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed Create Object Nonexisting method&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed Create object" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_23" />
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <TryCatch DisplayName="Try Catch Create Initial Object" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <Sequence sap:VirtualizedContainerService.HintSize="376,260" sap2010:WorkflowViewState.IdRef="Sequence_43">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <uja:CreateJavaObject ParametersList="{x:Null}" sap2010:Annotation.AnnotationText="Creating the JavaObject&#xA;" DisplayName="Create Object" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="CreateJavaObject_1" Result="[ConstructorObj]" TargetType="[invkTargetType]">
                    <uja:CreateJavaObject.Parameters>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <InArgument x:TypeArguments="x:String">String Test</InArgument>
                      </scg:List>
                    </uja:CreateJavaObject.Parameters>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </uja:CreateJavaObject>
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Create initial object&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="Create Object" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,104" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed Create object&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed Create object" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_24" />
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <TryCatch DisplayName="Try Catch Ambiguous method execution" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <Sequence sap:VirtualizedContainerService.HintSize="376,305" sap2010:WorkflowViewState.IdRef="Sequence_44">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <uja:InvokeJavaMethod ParametersList="{x:Null}" Result="{x:Null}" TargetType="{x:Null}" sap2010:Annotation.AnnotationText="Method that has the same name as constructor" DisplayName="Ambiguous method execution" sap:VirtualizedContainerService.HintSize="334,151" sap2010:WorkflowViewState.IdRef="InvokeJavaMethod_33" MethodName="[AmbiguityMethodname]" TargetObject="[ConstructorObj]">
                    <uja:InvokeJavaMethod.Parameters>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <InArgument x:TypeArguments="s:String[]">[AmbiguousMethodStrArrParam]</InArgument>
                      </scg:List>
                    </uja:InvokeJavaMethod.Parameters>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </uja:InvokeJavaMethod>
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Ambiguous method execution&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="Ambiguous method execution" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,104" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed Ambiguous method execution&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed Ambiguous method execution" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_25" />
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <Sequence sap2010:Annotation.AnnotationText="Let's try to run non-static methods.&#xA;Legend*&#xA;MR - method Result&#xA;CR - ConversionResult&#xA;NSM- non-static method" DisplayName="Non-Static Methods" sap:VirtualizedContainerService.HintSize="262.4,176.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <Sequence.Variables>
                <Variable x:TypeArguments="s:Int32[]" Name="ArrayCR" />
                <Variable x:TypeArguments="s:String[]" Name="StringArrayCR" />
                <Variable x:TypeArguments="p:JavaObject" Name="MRDoubleArray" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch DisplayName="Try Catch GenericMethods - Concatenate two strings" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="GenericMethods - Concatenate two strings" sap:VirtualizedContainerService.HintSize="376,375" sap2010:WorkflowViewState.IdRef="Sequence_27">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uja:InvokeJavaMethod ParametersList="{x:Null}" TargetType="{x:Null}" DisplayName="GenericMethods - Concatenate Strings" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="InvokeJavaMethod_17" MethodName="[GenericMethodsStringConcat]" Result="[MRConcatStrings]" TargetObject="[ConstructorObj]">
                      <uja:InvokeJavaMethod.Parameters>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <InArgument x:TypeArguments="x:String">[StrConcatParam1]</InArgument>
                          <InArgument x:TypeArguments="x:String">[StrConcatParam2]</InArgument>
                        </scg:List>
                      </uja:InvokeJavaMethod.Parameters>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uja:InvokeJavaMethod>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_17" Text="[&quot;Test 1 sucess: &quot; + MRConcatStrings.Convert(Of String)]" />
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;GenericMethods - Concatenate two strings&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="GenericMethods - Concatenate two strings" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_41" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,104" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed GenericMethods - Concatenate two strings&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed GenericMethods - Concatenate two strings" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_26" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <TryCatch DisplayName="Try Catch IntArray" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="IntArray" sap:VirtualizedContainerService.HintSize="376,504" sap2010:WorkflowViewState.IdRef="Sequence_24">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="p:JavaObject" Name="MRIntArray" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uja:InvokeJavaMethod ParametersList="{x:Null}" TargetType="{x:Null}" DisplayName="IntArray" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="InvokeJavaMethod_18" MethodName="[IntArrayMethod]" Result="[MRIntArray]" TargetObject="[ConstructorObj]">
                      <uja:InvokeJavaMethod.Parameters>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <InArgument x:TypeArguments="s:Int32[]">[IntArrayParam]</InArgument>
                        </scg:List>
                      </uja:InvokeJavaMethod.Parameters>
                    </uja:InvokeJavaMethod>
                    <uja:ConvertJavaObject x:TypeArguments="s:Int32[]" DisplayName="Convert Java Object" sap:VirtualizedContainerService.HintSize="334,89" sap2010:WorkflowViewState.IdRef="ConvertJavaObject`1_19" JavaObject="[MRIntArray]" Result="[ArrayCR]" />
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_41" Text="[&quot;Test 2 sucess: &quot; + &quot;Test result: &quot; + string.Join(&quot;, &quot;,ArrayCR)]" />
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;IntArray method test&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="IntArray" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_42" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,104" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed IntArray&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed IntArray" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_27" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <TryCatch DisplayName="Try Catch StringArray NonStatic" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="StringArray NonStatic" sap:VirtualizedContainerService.HintSize="376,466" sap2010:WorkflowViewState.IdRef="Sequence_25">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="p:JavaObject" Name="StringArrNS_MR" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uja:InvokeJavaMethod ParametersList="{x:Null}" TargetType="{x:Null}" DisplayName="StringArrNonStatic" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="InvokeJavaMethod_19" MethodName="[StrArrayNonStatic]" Result="[StringArrNS_MR]" TargetObject="[ConstructorObj]">
                      <uja:InvokeJavaMethod.Parameters>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <InArgument x:TypeArguments="s:String[]">[StrArrNonStaticParam]</InArgument>
                        </scg:List>
                      </uja:InvokeJavaMethod.Parameters>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uja:InvokeJavaMethod>
                    <uja:ConvertJavaObject x:TypeArguments="s:String[]" DisplayName="Convert Java Object" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ConvertJavaObject`1_6" JavaObject="[StringArrNS_MR]" Result="[StringArrayCR]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uja:ConvertJavaObject>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_42" Text="[&quot;Test 3 sucess: &quot; + string.Join(&quot;, &quot;, StringArrayCR)]" />
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;StringArray NonStatic method test&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="StringArray NonStatic" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_43" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,104" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed StringArray NonStatic&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed StringArray NonStatic" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_28" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <TryCatch DisplayName="Try Catch GenericsExtObj - Double Array" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="GenericsExtObj - Double Array" sap:VirtualizedContainerService.HintSize="376,504" sap2010:WorkflowViewState.IdRef="Sequence_28">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="DoubleArrayCR" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uja:InvokeJavaMethod ParametersList="{x:Null}" TargetType="{x:Null}" DisplayName="GenericsExtObj - Double Array" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="InvokeJavaMethod_20" MethodName="[GenericsExtendObject]" Result="[MRDoubleArray]" TargetObject="[ConstructorObj]">
                      <uja:InvokeJavaMethod.Parameters>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <InArgument x:TypeArguments="s:Double[]">[GenericsExtObjDoubleArrayParam]</InArgument>
                        </scg:List>
                      </uja:InvokeJavaMethod.Parameters>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uja:InvokeJavaMethod>
                    <uja:ConvertJavaObject x:TypeArguments="x:String" DisplayName="Convert Java Object" sap:VirtualizedContainerService.HintSize="334,89" sap2010:WorkflowViewState.IdRef="ConvertJavaObject`1_25" JavaObject="[MRDoubleArray]" Result="[DoubleArrayCR]" />
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_39" Text="[&quot;Test 4 sucess: &quot; +  string.join(&quot;, &quot;,DoubleArrayCR)]" />
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;GenericsExtObj - Double Array method test&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="GenericsExtObj - Double Array" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_44" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,104" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed GenericsExtObj - Double Array&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed GenericsExtObj - Double Array" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_29" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <TryCatch DisplayName="Try Catch GenericsExtObj - String" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="GenericsExtObj - String" sap:VirtualizedContainerService.HintSize="376,376" sap2010:WorkflowViewState.IdRef="Sequence_29">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="p:JavaObject" Name="GenericsExtStringMR" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uja:InvokeJavaMethod ParametersList="{x:Null}" TargetType="{x:Null}" DisplayName="GenericsExtObj - String" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="InvokeJavaMethod_21" MethodName="[GenericsExtendObject]" Result="[GenericsExtStringMR]" TargetObject="[ConstructorObj]">
                      <uja:InvokeJavaMethod.Parameters>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <InArgument x:TypeArguments="x:String">[GenericExtObjStringParam]</InArgument>
                        </scg:List>
                      </uja:InvokeJavaMethod.Parameters>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uja:InvokeJavaMethod>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_21" Text="[&quot;Test 5 sucess: &quot; + GenericsExtStringMR.Convert(Of String)]" />
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;GenericsExtObj - String method test&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="GenericsExtObj - String" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_45" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,105" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed GenericsExtObj - String&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed GenericsExtObj - String" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_30" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <TryCatch DisplayName="Try Catch GenericsExtString" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="GenericsExtendString" sap:VirtualizedContainerService.HintSize="376,376" sap2010:WorkflowViewState.IdRef="Sequence_30">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="p:JavaObject" Name="GenericExtStringMR" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uja:InvokeJavaMethod ParametersList="{x:Null}" TargetType="{x:Null}" DisplayName="GenericsExtString" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="InvokeJavaMethod_22" MethodName="[GenericsExtendString]" Result="[GenericExtStringMR]" TargetObject="[ConstructorObj]">
                      <uja:InvokeJavaMethod.Parameters>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <InArgument x:TypeArguments="x:String">[GenericExtStringParam]</InArgument>
                        </scg:List>
                      </uja:InvokeJavaMethod.Parameters>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uja:InvokeJavaMethod>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_22" Text="[&quot;Test 6 sucess: &quot;  + GenericExtStringMR.Convert(Of String)]" />
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;GenericsExtendString method test&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="GenericsExtendString" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_46" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,105" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed GenericsExtString&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed GenericsExtString" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_31" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <TryCatch DisplayName="Try Catch GenericsR" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="GenericsR" sap:VirtualizedContainerService.HintSize="376,506" sap2010:WorkflowViewState.IdRef="Sequence_23">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="GenericsRCR" />
                      <Variable x:TypeArguments="p:JavaObject" Name="GenericsRMR" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uja:InvokeJavaMethod ParametersList="{x:Null}" TargetType="{x:Null}" DisplayName="GenericsR - String" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="InvokeJavaMethod_23" MethodName="[GenericsR]" Result="[GenericsRMR]" TargetObject="[ConstructorObj]">
                      <uja:InvokeJavaMethod.Parameters>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <InArgument x:TypeArguments="x:String">[GenericsRStrParam]</InArgument>
                        </scg:List>
                      </uja:InvokeJavaMethod.Parameters>
                    </uja:InvokeJavaMethod>
                    <uja:ConvertJavaObject x:TypeArguments="x:String" DisplayName="Convert Java Object" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ConvertJavaObject`1_17" JavaObject="[GenericsRMR]" Result="[GenericsRCR]" />
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_38" Text="[&quot;Test 7 Success: &quot; + GenericsR.ToString + &quot;: &quot; + GenericsRCR.ToString]" />
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;GenericsR method test&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="GenericsR" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_47" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,105" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed GenericsR&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed GenericsR" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_32" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <TryCatch DisplayName="Try Catch Concatenate XYZ" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_12">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="Concatenate XYZ" sap:VirtualizedContainerService.HintSize="376,480" sap2010:WorkflowViewState.IdRef="Sequence_31">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="p:JavaObject" Name="ConcatenateObj" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uja:CreateJavaObject ParametersList="{x:Null}" DisplayName="Create Java Object" sap:VirtualizedContainerService.HintSize="334,64" sap2010:WorkflowViewState.IdRef="CreateJavaObject_2" Result="[ConcatenateObj]" TargetType="[invkTargetType]">
                      <uja:CreateJavaObject.Parameters>
                        <scg:List x:TypeArguments="InArgument" Capacity="0" />
                      </uja:CreateJavaObject.Parameters>
                    </uja:CreateJavaObject>
                    <uja:InvokeJavaMethod ParametersList="{x:Null}" TargetType="{x:Null}" DisplayName="ConcatenateXYZ" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="InvokeJavaMethod_25" MethodName="[ConcatenateXYZ]" Result="[MRConcatStrings]" TargetObject="[ConcatenateObj]">
                      <uja:InvokeJavaMethod.Parameters>
                        <scg:List x:TypeArguments="InArgument" Capacity="4" />
                      </uja:InvokeJavaMethod.Parameters>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uja:InvokeJavaMethod>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_25" Text="[&quot;Test 8 sucess &quot; + MRConcatStrings.Convert(Of String)]" />
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Concatenate XYZ method test&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="Concatenate XYZ" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_48" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,105" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed Concatenate XYZ&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed Concatenate XYZ" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_33" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <TryCatch DisplayName="Try Catch RecursiveCallTest" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="RecursiveCallTest" sap:VirtualizedContainerService.HintSize="376,376" sap2010:WorkflowViewState.IdRef="Sequence_32">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="p:JavaObject" Name="RecursiveCallTestMR" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uja:InvokeJavaMethod ParametersList="{x:Null}" TargetType="{x:Null}" DisplayName="RecursiveCallTest" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="InvokeJavaMethod_26" MethodName="[RecursiveCallTest]" Result="[RecursiveCallTestMR]" TargetObject="[ConstructorObj]">
                      <uja:InvokeJavaMethod.Parameters>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <InArgument x:TypeArguments="x:Int32">[RecursiveCallTestParam]</InArgument>
                        </scg:List>
                      </uja:InvokeJavaMethod.Parameters>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uja:InvokeJavaMethod>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_26" Text="[&quot;Test 9 sucess &quot; + RecursiveCallTestMR.Convert(Of String)]" />
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;RecursiveCallTest non static method test&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="RecursiveCallTest" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_49" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,105" sap2010:WorkflowViewState.IdRef="Catch`1_15">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed RecursiveCallTest&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed RecursiveCallTest" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_34" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <TryCatch DisplayName="Try Catch StringParamValidation" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="StringParamValidation" sap:VirtualizedContainerService.HintSize="376,376" sap2010:WorkflowViewState.IdRef="Sequence_46">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="p:JavaObject" Name="StrParamValidationMR" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uja:InvokeJavaMethod ParametersList="{x:Null}" TargetType="{x:Null}" DisplayName="StringParamValidation" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="InvokeJavaMethod_34" MethodName="[StringParamValidation]" Result="[StrParamValidationMR]" TargetObject="[ConstructorObj]">
                      <uja:InvokeJavaMethod.Parameters>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <InArgument x:TypeArguments="x:String">[StringParamValidationParam]</InArgument>
                        </scg:List>
                      </uja:InvokeJavaMethod.Parameters>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uja:InvokeJavaMethod>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_44" Text="[&quot;Test 10 sucess &quot; + StrParamValidationMR.Convert(Of String)]" />
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;StringParamValidation&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="StringParamValidation" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_50" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,105" sap2010:WorkflowViewState.IdRef="Catch`1_21">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed StringParamValidation&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed StringParamValidation" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_51" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Let's try to run static methods.&#xA;Legend*&#xA;MR - method Result&#xA;CR - ConversionResult&#xA;NSM- non-static method" DisplayName="Static Methods" sap:VirtualizedContainerService.HintSize="262.4,512.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <Sequence.Variables>
                <Variable x:TypeArguments="p:JavaObject" Name="MRIntType" />
                <Variable x:TypeArguments="p:JavaObject" Name="SMRecursiveCallMR" />
                <Variable x:TypeArguments="p:JavaObject" Name="MRBoolean" />
                <Variable x:TypeArguments="p:JavaObject" Name="StaticStringArrMR" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch DisplayName="Try Catch StaticIntType" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_15">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="StaticIntType" sap:VirtualizedContainerService.HintSize="376,376" sap2010:WorkflowViewState.IdRef="Sequence_34">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uja:InvokeJavaMethod ParametersList="{x:Null}" TargetObject="{x:Null}" DisplayName="StaticIntType" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="InvokeJavaMethod_28" MethodName="[StaticIntType]" Result="[MRIntType]" TargetType="[invkTargetType]">
                      <uja:InvokeJavaMethod.Parameters>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <InArgument x:TypeArguments="x:Int32">[SMIntParam]</InArgument>
                        </scg:List>
                      </uja:InvokeJavaMethod.Parameters>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uja:InvokeJavaMethod>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_28" Text="[&quot;Test 11 sucess &quot; + MRIntType.Convert(Of String)]" />
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;StaticIntType method test&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="StaticIntType" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_52" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,105" sap2010:WorkflowViewState.IdRef="Catch`1_17">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed StaticIntType&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed StaticIntType" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_36" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <TryCatch DisplayName="Try Catch StaticRecursiveCallTest" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="StaticRecursiveCallTest" sap:VirtualizedContainerService.HintSize="376,376" sap2010:WorkflowViewState.IdRef="Sequence_35">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uja:InvokeJavaMethod ParametersList="{x:Null}" TargetObject="{x:Null}" DisplayName="StaticRecursiveCallTest" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="InvokeJavaMethod_29" MethodName="[StaticRecursiveCallTest]" Result="[SMRecursiveCallMR]" TargetType="[invkTargetType]">
                      <uja:InvokeJavaMethod.Parameters>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <InArgument x:TypeArguments="x:Int32">[IntParamSM]</InArgument>
                        </scg:List>
                      </uja:InvokeJavaMethod.Parameters>
                    </uja:InvokeJavaMethod>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_29" Text="[&quot;Test 12 sucess &quot; + SMRecursiveCallMR.Convert(Of String)]" />
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;StaticRecursiveCallTest static method test&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="StaticRecursiveCallTest" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_53" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,105" sap2010:WorkflowViewState.IdRef="Catch`1_18">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed StaticRecursiveCallTest&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed StaticRecursiveCallTest" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_37" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <TryCatch DisplayName="Try Catch BooleanType" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_17">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="BooleanType" sap:VirtualizedContainerService.HintSize="376,376" sap2010:WorkflowViewState.IdRef="Sequence_36">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uja:InvokeJavaMethod ParametersList="{x:Null}" TargetObject="{x:Null}" DisplayName="BooleanType" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="InvokeJavaMethod_31" MethodName="[BooleanType]" Result="[MRBoolean]" TargetType="[invkTargetType]">
                      <uja:InvokeJavaMethod.Parameters>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <InArgument x:TypeArguments="x:Boolean">[SMBoolParam]</InArgument>
                        </scg:List>
                      </uja:InvokeJavaMethod.Parameters>
                    </uja:InvokeJavaMethod>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_31" Text="[&quot;Test 13 sucess &quot;  +MRBoolean.Convert(Of String)]" />
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;BooleanType method test&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="BooleanType" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_54" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,105" sap2010:WorkflowViewState.IdRef="Catch`1_19">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed BooleanType&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed BooleanType" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_38" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <TryCatch DisplayName="Try Catch StringArrStatic" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_18">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="StringArrStatic" sap:VirtualizedContainerService.HintSize="376,506" sap2010:WorkflowViewState.IdRef="Sequence_37">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="s:String[]" Name="StaticStringArrCR" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uja:InvokeJavaMethod ParametersList="{x:Null}" TargetObject="{x:Null}" DisplayName="StringArrStatic" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="InvokeJavaMethod_32" MethodName="[StringArrStatic]" Result="[StaticStringArrMR]" TargetType="[invkTargetType]">
                      <uja:InvokeJavaMethod.Parameters>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <InArgument x:TypeArguments="s:String[]">[StrArrStaticParam]</InArgument>
                        </scg:List>
                      </uja:InvokeJavaMethod.Parameters>
                    </uja:InvokeJavaMethod>
                    <uja:ConvertJavaObject x:TypeArguments="s:String[]" DisplayName="Convert StaticStringArrMR" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ConvertJavaObject`1_20" JavaObject="[StaticStringArrMR]" Result="[StaticStringArrCR]" />
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_43" Text="[&quot;Test 14 sucess &quot; + string.Join(&quot;, &quot;,StaticStringArrCR)]" />
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;StringArrStatic method test&quot;,&quot;0&quot;,True}]" DataTable="[DataTable]" DisplayName="StringArrStatic" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_55" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,105" sap2010:WorkflowViewState.IdRef="Catch`1_20">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Failed StringArrStatic&quot;,&quot;0&quot;,False,exception,exception.GetType}]" DataTable="[DataTable]" DisplayName="Failed StringArrStatic" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_39" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </Sequence>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[Test_Result]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Tests ran successfully</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </uja:JavaScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uja:JavaScope>
    <Sequence DisplayName="Deserialize JSON and get Activity version" sap:VirtualizedContainerService.HintSize="338,68" sap2010:WorkflowViewState.IdRef="Sequence_42">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="Text_ProjectConfig" />
        <Variable x:TypeArguments="njl:JObject" Name="JsonObject_Output" />
        <Variable x:TypeArguments="njl:JObject" Name="Project_depDes" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ReadTextFile sap2010:Annotation.AnnotationText="Reads the project.json file to a variable that we can parse though line by line.  Note it has to be Deserialized first as it is a JSON formatted file.  If you do not already have it click manage packages and add the UiPath.Web.Activities to your project." Content="[Text_ProjectConfig]" DisplayName="Read Text File" FileName="project.json" sap:VirtualizedContainerService.HintSize="384,156" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ReadTextFile>
      <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[JsonObject_Output]" JsonString="[Text_ProjectConfig]" />
      <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Project_Dependencies]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[JsonObject_Output.SelectToken("dependencies").ToString]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[Project_depDes]" JsonString="[Project_Dependencies]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:DeserializeJson>
      <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[PackageVersion]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Project_depDes("UiPath.Java.Activities").ToString]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence DisplayName="XML Conversion" sap:VirtualizedContainerService.HintSize="338,68" sap2010:WorkflowViewState.IdRef="Sequence_40">
      <Sequence.Variables>
        <Variable x:TypeArguments="sxl:XElement" Name="xmlRows" />
        <Variable x:TypeArguments="sxl:XElement" Name="xmlDocument" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="426,60" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="sxl:XElement">[xmlDocument]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sxl:XElement">[New XElement("testsuites", New XAttribute("duration","10sec"))]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="426,60" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="sxl:XElement">[xmlRows]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sxl:XElement">[new XElement("testsuite")]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DataTable]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="426,404" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,256" sap2010:WorkflowViewState.IdRef="Sequence_39">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="If( CBool(rowEl.Item(&quot;Result&quot;)) = True)&#xA;&#x9;xmlRow.Add (New XElement(&quot;testcase&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;New XAttribute(&quot;classname&quot;, Package + &quot; &quot; + PackageVersion),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;New XAttribute(&quot;name&quot;, Package + PackageVersion +&quot; &quot;+ rowEl.Item(&quot;Test&quot;).ToString()),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;New XAttribute(&quot;duration&quot;, rowEl.Item(&quot;Duration&quot;).ToString())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Else &#xA;&#x9;&#x9;xmlRow.Add (New XElement(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;testcase&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;New XAttribute(&quot;classname&quot;, Package + &quot; &quot; + PackageVersion),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;New XAttribute(&quot;name&quot;, Package + &quot; &quot; + PackageVersion+ &quot; &quot; + rowEl.Item(&quot;Test&quot;).ToString()),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;New XAttribute(&quot;duration&quot;, rowEl.Item(&quot;Duration&quot;).ToString()),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;New XElement(&quot;failure&quot;,rowEl.Item(&quot;ErrorMessage&quot;).ToString(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;New XAttribute(&quot;type&quot;, rowEl.Item(&quot;ExceptionType&quot;).ToString())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)))&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;End If" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="sxl:XElement" x:Key="xmlRow">[xmlRows]</InOutArgument>
                  <InArgument x:TypeArguments="sd:DataRow" x:Key="rowEl">[row]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Package">[PackageName]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="PackageVersion">[PackageVersion]</InArgument>
                </ui:InvokeCode.Arguments>
              </ui:InvokeCode>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:InvokeCode ContinueOnError="{x:Null}" Code="doc.Add(row)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="426,164" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
        <ui:InvokeCode.Arguments>
          <InArgument x:TypeArguments="sxl:XElement" x:Key="row">[xmlRows]</InArgument>
          <InOutArgument x:TypeArguments="sxl:XElement" x:Key="doc">[xmlDocument]</InOutArgument>
        </ui:InvokeCode.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeCode>
      <ui:WriteTextFile DisplayName="Write Text File" FileName="junit_Java.xml" sap:VirtualizedContainerService.HintSize="426,134" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[&quot;&lt;?xml version=&quot;&quot;1.0&quot;&quot; encoding=&quot;&quot;UTF-8&quot;&quot;?&gt;&quot; + Environment.NewLine +&#xA;xmldocument.ToString()]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:WriteTextFile>
    </Sequence>
  </Sequence>
</Activity>